Date/Time:       2013-08-22 16:01:06 -0600
OS Version:      10.8 (Build 12A269)
Architecture:    x86_64
Report Version:  11

Command:         causes_fault
Path:            ./causes_fault
Version:         ??? (???)
Parent:          tcsh [81030]

PID:             4578
Event:           manual
Duration:        10.05s
Steps:           832 (10ms sampling interval)

Hardware model:  iMac10,1
Active cpus:     2
Free pages:      26879 pages (-705)
Pageins:         0 pages
Pageouts:        0 pages


Process:         causes_fault [4578] (zombie)
Path:            ./causes_fault
Architecture:    x86_64
Parent:          tcsh [81030]
UID:             594
Task size:       1948 pages (+1942)
CPU Time:        0.376s
Note:            Suspended for 6 samples
Note:            Terminated (zombie) for 2 samples

  Thread 0xab6b39   DispatchQueue <multiple> priority <multiple> cpu time   0.366s
  808 start + 1 (libdyld.dylib) [0x7fff897007e1]
    610 main + 577 (causes_fault) [0x1006ddd81]
      609 MakeContextCurrent + 272 (libGL.1.dylib) [0x1006e7fd3]
        609 applegl_bind_context + 61 (libGL.1.dylib) [0x1006eafc9]
          559 apple_glx_make_current_context + 456 (libGL.1.dylib) [0x1006e245a]
            555 apple_glx_surface_create + 120 (libGL.1.dylib) [0x1006e3e11]
              555 XAppleDRICreateSurface + 165 (libGL.1.dylib) [0x1006e4e56]
                554 _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                  554 xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                    554 wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                      554 __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                       *554 ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                1   _XReply + 345 (libX11.6.dylib) [0x10078577e]
                  1   handle_response + 132 (libX11.6.dylib) [0x1007850a7]
                    1   _XEnq + 152 (libX11.6.dylib) [0x100787008]
                      1   wire_to_event + 72 (libGL.1.dylib) [0x1006e53c1]
                        1   surface_notify_handler + 27 (libGL.1.dylib) [0x1006e1d9d]
                          1   apple_glx_context_surface_changed + 142 (libGL.1.dylib) [0x1006e28b0]
                            1   unlock_context_list + 16 (libGL.1.dylib) [0x1006e20c9]
                              1   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                1   __mtx_droplock + 286 (libsystem_c.dylib) [0x7fff85e4d7d4]
                                 *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                   *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                     *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                       *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                         *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                           *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
            3   apple_glx_surface_create + 57 (libGL.1.dylib) [0x1006e3dd2]
              3   apple_glx_drawable_create + 510 (libGL.1.dylib) [0x1006e2ba1]
                3   _apple_glx_log + 120 (libGL.1.dylib) [0x1006e3289]
                  3   _apple_glx_vlog + 375 (libGL.1.dylib) [0x1006e3418]
                    3   asl_msg_set_key_val_op + 1691 (libsystem_c.dylib) [0x7fff85e5baa7]
                      3   _asl_msg_new_key_val_op + 463 (libsystem_c.dylib) [0x7fff85e5e9b7]
                       *3   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                         *3   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                           *3   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                             *3   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                               *3   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                 *3   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
            1   apple_glx_surface_create + 284 (libGL.1.dylib) [0x1006e3eb5]
              1   _apple_glx_log + 120 (libGL.1.dylib) [0x1006e3289]
                1   _apple_glx_vlog + 182 (libGL.1.dylib) [0x1006e3357]
                  1   fprintf + 186 (libsystem_c.dylib) [0x7fff85eb1ce7]
                    1   vfprintf_l + 685 (libsystem_c.dylib) [0x7fff85ebc335]
                      1   __sflush + 94 (libsystem_c.dylib) [0x7fff85eb0b00]
                        1   __write_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab396fe]
                         *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
          50  apple_glx_make_current_context + 672 (libGL.1.dylib) [0x1006e2532]
            40  surface_make_current + 96 (libGL.1.dylib) [0x1006e3f94]
              40  xp_attach_gl_context + 95 (libXplugin.1.dylib) [0x100d12326]
                32  CGLSetSurface + 433 (OpenGL) [0x7fff817b542b]
                  29  ??? (OpenGL + 28796) [0x7fff817b507c]
                    29  ??? (OpenGL + 14268) [0x7fff817b17bc]
                      29  ??? [0x1015a6db3]
                        26  ??? [0x101a7de01]
                          26  ??? (OpenGL + 10960) [0x7fff817b0ad0]
                            26  _CGSBindSurface + 105 (CoreGraphics) [0x7fff834ec9b5]
                              26  mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                               *24  ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                               *2   hndl_mach_scall64 + 19 (mach_kernel) [0xffffff80002ced13]
                                 *2   ??? (mach_kernel + 678614) [0xffffff80002a5ad6]
                                   *2   mach_msg_overwrite_trap + 187 (mach_kernel) [0xffffff80002195fb]
                                     *2   ipc_kmsg_send + 372 (mach_kernel) [0xffffff8000210554]
                                       *2   ipc_mqueue_send + 388 (mach_kernel) [0xffffff8000212d34]
                                         *2   ipc_mqueue_post + 539 (mach_kernel) [0xffffff8000212f7b]
                                           *2   ml_set_interrupts_enabled + 51 (mach_kernel) [0xffffff80002b1d93]
                                             *2   ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                               *2   kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                                 *2   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                   *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                     *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                       *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                        3   ??? [0x101a7df20]
                          3   IOConnectCallMethod + 346 (IOKit) [0x7fff8680a03e]
                            3   io_connect_method + 380 (IOKit) [0x7fff868561ac]
                              3   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                               *3   hndl_mach_scall64 + 19 (mach_kernel) [0xffffff80002ced13]
                                 *3   ??? (mach_kernel + 678614) [0xffffff80002a5ad6]
                                   *3   mach_msg_overwrite_trap + 187 (mach_kernel) [0xffffff80002195fb]
                                     *3   ipc_kmsg_send + 104 (mach_kernel) [0xffffff8000210448]
                                       *3   ipc_kobject_server + 317 (mach_kernel) [0xffffff8000220abd]
                                         *3   ??? (mach_kernel + 623009) [0xffffff80002981a1]
                                           *3   is_io_connect_method + 415 (mach_kernel) [0xffffff80006638ef]
                                             *3   IOUserClient::externalMethod(unsigned int, IOExternalMethodArguments*, IOExternalMethodDispatch*, OSObject*, void*) + 797 (mach_kernel) [0xffffff8000665eed]
                                               *3   shim_io_connect_method_structureI_structureO + 227 (mach_kernel) [0xffffff8000665313]
                                                 *2   IOATIR600GLContext::set_surface_get_config_status(sIOGLContextSetSurfaceData*, sIOGLContextGetConfigStatus*, unsigned long long, unsigned long long*) + 64 (ATIRadeonX2000) [0xffffff7f8188669e]
                                                   *2   lck_mtx_lock + 653 (mach_kernel) [0xffffff80002acd8d]
                                                     *2   lck_mtx_lock_wait_x86 + 391 (mach_kernel) [0xffffff80002b18d7]
                                                       *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                         *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                           *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                 *1   IOATIR600GLContext::set_surface_get_config_status(sIOGLContextSetSurfaceData*, sIOGLContextGetConfigStatus*, unsigned long long, unsigned long long*) + 176 (ATIRadeonX2000) [0xffffff7f8188670e]
                                                   *1   IOATIR600GLContext::set_surface(unsigned int, eIOGLContextModeBits, unsigned int, unsigned int) + 825 (ATIRadeonX2000) [0xffffff7f81885aa7]
                                                     *1   ATIR600Surface::shape_surface(unsigned int) + 1677 (ATIRadeonX2000) [0xffffff7f818aff6f]
                                                       *1   ATIR600Surface::shape_surface_buffers(unsigned char, unsigned char*, unsigned int, void*, unsigned char, bool, unsigned int) + 1218 (ATIRadeonX2000) [0xffffff7f818af2e4]
                                                         *1   ATIRadeonX2000HWAlignManager::getSurfaceInfo(_ADDR_COMPUTE_SURFACE_INFO_INPUT*, _ADDR_COMPUTE_SURFACE_INFO_OUTPUT*, _ADDR_TILEINFO*) + 101 (ATIRadeonX2000) [0xffffff7f818ee1d3]
                                                           *1   AddrLib::ComputeSurfaceInfo(_ADDR_COMPUTE_SURFACE_INFO_INPUT const*, _ADDR_COMPUTE_SURFACE_INFO_OUTPUT*) const + 616 (ATIRadeonX2000) [0xffffff7f81953704]
                                                             *1   R600AddrLib::HwlComputeSurfaceInfo(_ADDR_COMPUTE_SURFACE_INFO_INPUT const*, _ADDR_COMPUTE_SURFACE_INFO_OUTPUT*) const + 14 (ATIRadeonX2000) [0xffffff7f8195739a]
                                                               *1   R600AddrLib::ComputeSurfaceInfoMacroTiled(_ADDR_COMPUTE_SURFACE_INFO_INPUT const*, _ADDR_COMPUTE_SURFACE_INFO_OUTPUT*, unsigned int, _AddrTileMode) const + 1 (ATIRadeonX2000) [0xffffff7f819580db]
                  3   ??? (OpenGL + 28782) [0x7fff817b506e]
                    3   ??? (OpenGL + 33298) [0x7fff817b6212]
                      3   ??? (OpenGL + 24646) [0x7fff817b4046]
                        3   CGSGetSurfaceBounds + 236 (CoreGraphics) [0x7fff834ed161]
                          3   _CGSGetSurfaceBounds + 109 (CoreGraphics) [0x7fff834ed255]
                            3   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                             *2   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                             *1   hndl_mach_scall64 + 19 (mach_kernel) [0xffffff80002ced13]
                               *1   ??? (mach_kernel + 678614) [0xffffff80002a5ad6]
                                 *1   mach_msg_overwrite_trap + 187 (mach_kernel) [0xffffff80002195fb]
                                   *1   ipc_kmsg_send + 372 (mach_kernel) [0xffffff8000210554]
                                     *1   ipc_mqueue_send + 388 (mach_kernel) [0xffffff8000212d34]
                                       *1   ipc_mqueue_post + 539 (mach_kernel) [0xffffff8000212f7b]
                                         *1   ml_set_interrupts_enabled + 51 (mach_kernel) [0xffffff80002b1d93]
                                           *1   ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                             *1   kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                               *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                 *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                   *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                     *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                8   CGLSetSurface + 264 (OpenGL) [0x7fff817b5382]
                  7   _CGSSetWindowSendExposed + 94 (CoreGraphics) [0x7fff834f64d3]
                    7   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                     *5   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                     *2   hndl_mach_scall64 + 19 (mach_kernel) [0xffffff80002ced13]
                       *2   ??? (mach_kernel + 678614) [0xffffff80002a5ad6]
                         *2   mach_msg_overwrite_trap + 187 (mach_kernel) [0xffffff80002195fb]
                           *2   ipc_kmsg_send + 372 (mach_kernel) [0xffffff8000210554]
                             *2   ipc_mqueue_send + 388 (mach_kernel) [0xffffff8000212d34]
                               *2   ipc_mqueue_post + 539 (mach_kernel) [0xffffff8000212f7b]
                                 *2   ml_set_interrupts_enabled + 51 (mach_kernel) [0xffffff80002b1d93]
                                   *2   ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                     *2   kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                       *2   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                         *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                           *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                             *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                  1   CGSSetWindowSendExposed + 47 (CoreGraphics) [0x7fff834f639b]
                    1   CGSWindowByID + 70 (CoreGraphics) [0x7fff834848a1]
                      1   find_shared_window + 242 (CoreGraphics) [0x7fff8344f66a]
                        1   _CGSGetSharedWindow + 111 (CoreGraphics) [0x7fff8344f8e5]
                          1   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                           *1   hndl_mach_scall64 + 19 (mach_kernel) [0xffffff80002ced13]
                             *1   ??? (mach_kernel + 678614) [0xffffff80002a5ad6]
                               *1   mach_msg_overwrite_trap + 187 (mach_kernel) [0xffffff80002195fb]
                                 *1   ipc_kmsg_send + 372 (mach_kernel) [0xffffff8000210554]
                                   *1   ipc_mqueue_send + 388 (mach_kernel) [0xffffff8000212d34]
                                     *1   ipc_mqueue_post + 539 (mach_kernel) [0xffffff8000212f7b]
                                       *1   ml_set_interrupts_enabled + 51 (mach_kernel) [0xffffff80002b1d93]
                                         *1   ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                           *1   kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                             *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                               *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                 *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                   *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
            6   surface_make_current + 226 (libGL.1.dylib) [0x1006e4016]
              6   apple_glapi_oglfw_viewport_scissor + 27 (libGL.1.dylib) [0x1006e4608]
                6   _apple_glapi_create_table + 41 (libGL.1.dylib) [0x1006e4516]
                  2   _glapi_create_table_from_handle + 52032 (libGL.1.dylib) [0x10070c569]
                    2   dlsym + 72 (libdyld.dylib) [0x7fff896ffe76]
                      2   dlsym + 600 (dyld) [0x7fff602e7be7]
                        2   ImageLoader::findExportedSymbolInImageOrDependentImages(char const*, ImageLoader::LinkContext const&, ImageLoader const**) const + 91 (dyld) [0x7fff602ebe91]
                          2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                            2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                              2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 161 (dyld) [0x7fff602ebd0b]
                               *2   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                  2   _glapi_create_table_from_handle + 55496 (libGL.1.dylib) [0x10070d2f1]
                    2   dlsym + 72 (libdyld.dylib) [0x7fff896ffe76]
                      2   dlsym + 600 (dyld) [0x7fff602e7be7]
                        2   ImageLoader::findExportedSymbolInImageOrDependentImages(char const*, ImageLoader::LinkContext const&, ImageLoader const**) const + 91 (dyld) [0x7fff602ebe91]
                          2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                            2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                              2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                                2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                                  2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                                    2   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 147 (dyld) [0x7fff602ebcfd]
                                      2   ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const + 46 (dyld) [0x7fff602ef822]
                                        2   ImageLoaderMachOCompressed::findExportedSymbol(char const*, ImageLoader const**) const + 93 (dyld) [0x7fff602f535d]
                                          2   ImageLoaderMachOCompressed::trieWalk(unsigned char const*, unsigned char const*, char const*) + 48 (dyld) [0x7fff602f51b0]
                                           *2   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                             *2   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                               *2   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                 *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                   *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                     *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                  1   _glapi_create_table_from_handle + 41341 (libGL.1.dylib) [0x100709ba6]
                    1   dlsym + 72 (libdyld.dylib) [0x7fff896ffe76]
                      1   dlsym + 600 (dyld) [0x7fff602e7be7]
                        1   ImageLoader::findExportedSymbolInImageOrDependentImages(char const*, ImageLoader::LinkContext const&, ImageLoader const**) const + 91 (dyld) [0x7fff602ebe91]
                          1   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 82 (dyld) [0x7fff602ebcbc]
                            1   ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const + 46 (dyld) [0x7fff602ef822]
                              1   ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const + 46 (dyld) [0x7fff602ef822]
                                1   ImageLoaderMachOCompressed::findExportedSymbol(char const*, ImageLoader const**) const + 93 (dyld) [0x7fff602f535d]
                                  1   ImageLoaderMachOCompressed::trieWalk(unsigned char const*, unsigned char const*, char const*) + 186 (dyld) [0x7fff602f523a]
                                    1   <executing in user space>
                  1   _glapi_create_table_from_handle + 76577 (libGL.1.dylib) [0x10071254a]
                    1   dlsym + 72 (libdyld.dylib) [0x7fff896ffe76]
                      1   dlsym + 600 (dyld) [0x7fff602e7be7]
                        1   ImageLoader::findExportedSymbolInImageOrDependentImages(char const*, ImageLoader::LinkContext const&, ImageLoader const**) const + 91 (dyld) [0x7fff602ebe91]
                          1   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                            1   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                              1   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 306 (dyld) [0x7fff602ebd9c]
                                1   ImageLoader::findExportedSymbolInDependentImagesExcept(char const*, ImageLoader const**, ImageLoader const**&, ImageLoader const**, ImageLoader const**) const + 268 (dyld) [0x7fff602ebd76]
                                 *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                   *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                     *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                       *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                         *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                           *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
            4   surface_make_current + 126 (libGL.1.dylib) [0x1006e3fb2]
              4   fprintf + 186 (libsystem_c.dylib) [0x7fff85eb1ce7]
                4   vfprintf_l + 685 (libsystem_c.dylib) [0x7fff85ebc335]
                  4   __sflush + 94 (libsystem_c.dylib) [0x7fff85eb0b00]
                    4   __write_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab396fe]
                     *4   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
      1   MakeContextCurrent + 369 (libGL.1.dylib) [0x1006e8034]
        1   _XError + 247 (libX11.6.dylib) [0x100787e99]
          1   _XDefaultError + 120 (libX11.6.dylib) [0x1007878d0]
            1   XGetErrorDatabaseText + 97 (libX11.6.dylib) [0x10076a3ba]
              1   XrmGetFileDatabase + 79 (libX11.6.dylib) [0x100789f82]
                1   GetDatabase + 2474 (libX11.6.dylib) [0x100789cd0]
                  1   PutEntry + 1025 (libX11.6.dylib) [0x100788ea3]
                    1   malloc + 41 (libsystem_c.dylib) [0x7fff85e61bd7]
                      1   malloc_zone_malloc + 71 (libsystem_c.dylib) [0x7fff85e61183]
                        1   _spin_lock$VARIANT$mp + 13 (libsystem_c.dylib) [0x7fff85e36f7d]
                          1   <executing in user space>
    54  main + 338 (causes_fault) [0x1006ddc92]
      54  glXChooseVisual + 56 (libGL.1.dylib) [0x1006e6f6a]
        54  GetGLXPrivScreenConfig + 44 (libGL.1.dylib) [0x1006e6ee8]
          45  __glXInitialize + 460 (libGL.1.dylib) [0x1006e89b1]
            45  applegl_create_display + 13 (libGL.1.dylib) [0x1006eaf6b]
              44  apple_init_glx + 127 (libGL.1.dylib) [0x1006e1d5a]
                44  apple_glx_get_client_id + 24 (libGL.1.dylib) [0x1006e1cb8]
                  44  xp_init + 167 (libXplugin.1.dylib) [0x100d1035f]
                    43  CGSNewConnection + 109 (CoreGraphics) [0x7fff8347b2c2]
                      43  dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                        43  _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                          41  __CGSInitialize_block_invoke_0 + 36 (CoreGraphics) [0x7fff83478850]
                            40  initDisplayMappings + 29 (CoreGraphics) [0x7fff83478af5]
                              40  initDisplayState + 188 (CoreGraphics) [0x7fff83478c91]
                                40  CGSScoreboard + 23 (CoreGraphics) [0x7fff83478ed1]
                                  40  CGSServerPort + 149 (CoreGraphics) [0x7fff83478fa4]
                                    40  CFBundleGetValueForInfoDictionaryKey + 36 (CoreFoundation) [0x7fff8494b8d4]
                                      40  CFBundleGetLocalInfoDictionary + 60 (CoreFoundation) [0x7fff84929bdc]
                                        40  CFBundleCopyResourceURL + 71 (CoreFoundation) [0x7fff8490de77]
                                          40  _CFBundleCopyFindResources + 1709 (CoreFoundation) [0x7fff849ada1d]
                                            40  _CFBundleCopyURLsOfKey + 361 (CoreFoundation) [0x7fff849b0529]
                                              40  _CFBundleCopyQueryTable + 279 (CoreFoundation) [0x7fff849abe87]
                                                31  _CFBundleCreateQueryTableAtPath + 700 (CoreFoundation) [0x7fff849af5cc]
                                                  27  stat$INODE64 + 10 (libsystem_kernel.dylib) [0x7fff8ab3a37e]
                                                   *27  hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                     *27  unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                       *27  stat64 + 140 (mach_kernel) [0xffffff80002fe3cc]
                                                         *27  ??? (mach_kernel + 1071696) [0xffffff8000305a50]
                                                           *27  vn_stat_noauth + 151 (mach_kernel) [0xffffff8000309847]
                                                             *27  vnode_getattr + 105 (mach_kernel) [0xffffff8000310629]
                                                               *27  nfs3_vnop_getattr + 56 (mach_kernel) [0xffffff800049ba98]
                                                                 *27  nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                                                                   *27  nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                                                                     *27  nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                                       *27  nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                                         *27  msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                           *27  ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                                             *27  lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                                               *26  thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                 *26  ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                   *26  machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                                               *1   thread_block_reason + 352 (mach_kernel) [0xffffff800022da10]
                                                                                 *1   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                                                                                   *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                                                     *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                                                       *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                         *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                           *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                  2   _CFBundleReadDirectory + 502 (CoreFoundation) [0x7fff849afd86]
                                                    2   __open_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab3902a]
                                                     *2   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                       *2   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                         *2   open_nocancel + 242 (mach_kernel) [0xffffff80002fc3e2]
                                                           *2   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                                             *2   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                                               *2   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                                                 *2   nfs_vnop_open + 582 (mach_kernel) [0xffffff8000499e86]
                                                                   *2   nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                                                                     *2   nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                                                                       *2   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                                         *2   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                                           *2   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                             *2   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                                               *2   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                                                 *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                   *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                     *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                  1   _CFBundleReadDirectory + 529 (CoreFoundation) [0x7fff849afda1]
                                                    1   readdir$INODE64 + 47 (libsystem_c.dylib) [0x7fff85e9bee8]
                                                      1   __getdirentries64 + 10 (libsystem_kernel.dylib) [0x7fff8ab38be6]
                                                       *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                         *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                           *1   getdirentries64 + 90 (mach_kernel) [0xffffff8000301c3a]
                                                             *1   ??? (mach_kernel + 1054805) [0xffffff8000301855]
                                                               *1   VNOP_READDIR + 62 (mach_kernel) [0xffffff800031330e]
                                                                 *1   nfs_vnop_readdir + 776 (mach_kernel) [0xffffff80004a7548]
                                                                   *1   nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                                                                     *1   nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                                                                       *1   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                                         *1   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                                           *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                             *1   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                                               *1   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                                                 *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                   *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                     *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                  1   _CFBundleReadDirectory + 1268 (CoreFoundation) [0x7fff849b0084]
                                                    1   CFArrayAppendValue + 91 (CoreFoundation) [0x7fff848e0b7b]
                                                      1   -[__NSArrayM insertObject:atIndex:] + 334 (CoreFoundation) [0x7fff84915f5e]
                                                       *1   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
                                                         *1   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                                                           *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                             *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                               *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                 *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                   *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                8   _CFBundleCreateQueryTableAtPath + 761 (CoreFoundation) [0x7fff849af609]
                                                  8   _CFBundleGetLanguageSearchList + 107 (CoreFoundation) [0x7fff848fe16b]
                                                    8   _CFBundleAddPreferredLprojNamesInDirectory + 440 (CoreFoundation) [0x7fff848fd9c8]
                                                      8   dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                                                        8   _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                                                          8   ___CFBundleCopyUserLanguages_block_invoke_0 + 35 (CoreFoundation) [0x7fff849ae1e3]
                                                            8   CFPreferencesCopyAppValue + 186 (CoreFoundation) [0x7fff8491f67a]
                                                              3   +[CFPrefsSearchListSource withSearchListForIdentifier:perform:] + 301 (CoreFoundation) [0x7fff84a495dd]
                                                                3   -[CFPrefsSearchListSource addSourceForIdentifier:user:byHost:] + 123 (CoreFoundation) [0x7fff84a49ecb]
                                                                  3   +[CFPrefsSource withSourceForIdentifier:user:byHost:container:perform:] + 83 (CoreFoundation) [0x7fff84a48473]
                                                                    3   dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                                                                      3   _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                                                                        2   __71+[CFPrefsSource withSourceForIdentifier:user:byHost:container:perform:]_block_invoke_0 + 66 (CoreFoundation) [0x7fff84a48822]
                                                                          2   CFNotificationCenterGetDistributedCenter + 74 (CoreFoundation) [0x7fff8490ac5a]
                                                                            2   dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                                                                              2   _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                                                                                2   __CFNotificationCenterGetDistributedCenter_block_invoke_0 + 26 (CoreFoundation) [0x7fff849c0e8a]
                                                                                  2   __CFXNotificationCenterCreate + 302 (CoreFoundation) [0x7fff8491894e]
                                                                                    2   __CFXNotificationCenterSetupConnection + 72 (CoreFoundation) [0x7fff849189a8]
                                                                                      2   vproc_swap_integer + 89 (liblaunch.dylib) [0x7fff845183e0]
                                                                                        2   ??? (liblaunch.dylib + 17006) [0x7fff8451a26e]
                                                                                          2   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                                                                           *2   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                                                                        1   __71+[CFPrefsSource withSourceForIdentifier:user:byHost:container:perform:]_block_invoke_0 + 106 (CoreFoundation) [0x7fff84a4884a]
                                                                          1   CFNotificationCenterAddObserver + 198 (CoreFoundation) [0x7fff8490ad36]
                                                                            1   _CFXNotificationRegisterObserver + 1261 (CoreFoundation) [0x7fff8490964d]
                                                                              1   -[_NSDNXPCConnection sendMessage:waitForSend:] + 131 (CoreFoundation) [0x7fff84a36543]
                                                                                1   _CFSuddenTerminationDisable + 108 (CoreFoundation) [0x7fff84909eac]
                                                                                  1   _vproc_transaction_begin + 35 (liblaunch.dylib) [0x7fff8451847e]
                                                                                    1   dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                                                                                      1   _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                                                                                        1   ??? (liblaunch.dylib + 23889) [0x7fff8451bd51]
                                                                                          1   vproc_swap_integer + 89 (liblaunch.dylib) [0x7fff845183e0]
                                                                                            1   ??? (liblaunch.dylib + 17006) [0x7fff8451a26e]
                                                                                              1   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                                                                               *1   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                                                              3   +[CFPrefsSearchListSource withSearchListForIdentifier:perform:] + 824 (CoreFoundation) [0x7fff84a497e8]
                                                                3   __CFPreferencesCopyAppValue_block_invoke_0 + 32 (CoreFoundation) [0x7fff84a46080]
                                                                  3   -[CFPrefsSearchListSource copyValueForKey:] + 131 (CoreFoundation) [0x7fff84a4a213]
                                                                    3   -[CFPrefsPlistSource copyValueForKey:] + 42 (CoreFoundation) [0x7fff84a4b27a]
                                                                      3   -[CFPrefsPlistSource synchronizeIfStale] + 113 (CoreFoundation) [0x7fff84a4b1a1]
                                                                        3   -[CFPrefsPlistSource synchronize] + 316 (CoreFoundation) [0x7fff84a4c36c]
                                                                          3   withDaemonConnection + 87 (CoreFoundation) [0x7fff84a47f07]
                                                                            3   __33-[CFPrefsPlistSource synchronize]_block_invoke_0 + 296 (CoreFoundation) [0x7fff84a4c588]
                                                                              3   -[CFPrefsPlistSource copyReplyForDaemonMessage:toConnection:error:] + 144 (CoreFoundation) [0x7fff84a4b980]
                                                                                3   xpc_connection_send_message_with_reply_sync + 127 (libxpc.dylib) [0x7fff8b817e1f]
                                                                                  3   semaphore_wait_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab376c2]
                                                                                   *3   semaphore_wait_continue + 0 (mach_kernel) [0xffffff8000233e90]
                                                              2   +[CFPrefsSearchListSource withSearchListForIdentifier:perform:] + 205 (CoreFoundation) [0x7fff84a4957d]
                                                                2   -[CFPrefsSearchListSource addManagedSourceForIdentifier:user:] + 108 (CoreFoundation) [0x7fff84a49ddc]
                                                                  2   +[CFPrefsManagedSource withSourceForIdentifier:user:perform:] + 235 (CoreFoundation) [0x7fff84a4c94b]
                                                                    2   -[CFPrefsManagedSource initWithDomain:user:byHost:] + 56 (CoreFoundation) [0x7fff84a4ca58]
                                                                      2   _CFPreferencesIsManaged + 92 (CoreFoundation) [0x7fff8493d77c]
                                                                        2   dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                                                                          2   _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                                                                            2   ___CFPreferencesIsManaged_block_invoke_0 + 120 (CoreFoundation) [0x7fff84a47e68]
                                                                              1   withDaemonConnection + 36 (CoreFoundation) [0x7fff84a47ed4]
                                                                                1   setUpDaemonConnectionIfNecessary + 316 (CoreFoundation) [0x7fff84a4ce6c]
                                                                                  1   xpc_connection_send_message_with_reply_sync + 112 (libxpc.dylib) [0x7fff8b817e10]
                                                                                    1   _xpc_connection_send_message_with_reply_f + 147 (libxpc.dylib) [0x7fff8b817f0a]
                                                                                      1   _dispatch_queue_push_list_slow2 + 33 (libdispatch.dylib) [0x7fff82f01e54]
                                                                                        1   _dispatch_wakeup + 132 (libdispatch.dylib) [0x7fff82f01f11]
                                                                                          1   _dispatch_queue_wakeup_global_slow + 59 (libdispatch.dylib) [0x7fff82f020b7]
                                                                                            1   __workq_kernreturn + 10 (libsystem_kernel.dylib) [0x7fff8ab396d6]
                                                                                             *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                                                                              1   withDaemonConnection + 87 (CoreFoundation) [0x7fff84a47f07]
                                                                                1   __block_global_11 + 113 (CoreFoundation) [0x7fff84a47f91]
                                                                                  1   CFCopyUserName + 38 (CoreFoundation) [0x7fff8493d6c6]
                                                                                    1   getpwuid + 49 (libsystem_info.dylib) [0x7fff88b3f423]
                                                                                      1   search_item_bynumber + 87 (libsystem_info.dylib) [0x7fff88b3fc12]
                                                                                        1   ds_user_byuid + 75 (libsystem_info.dylib) [0x7fff88b3fe69]
                                                                                          1   _ds_item + 59 (libsystem_info.dylib) [0x7fff88b400a8]
                                                                                            1   _od_rpc_call + 132 (libsystem_info.dylib) [0x7fff88b40198]
                                                                                              1   xpc_pipe_routine + 53 (libxpc.dylib) [0x7fff8b817012]
                                                                                                1   dispatch_once_f + 50 (libdispatch.dylib) [0x7fff82f01085]
                                                                                                  1   _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                                                                                                    1   _xpc_pipe_check_in_once + 29 (libxpc.dylib) [0x7fff8b817295]
                                                                                                      1   _xpc_connection_check_in_with_ports + 150 (libxpc.dylib) [0x7fff8b81733d]
                                                                                                        1   _xpc_connection_check_in + 279 (libxpc.dylib) [0x7fff8b815fea]
                                                                                                          1   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                                                                                           *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                                                1   _CFBundleCreateQueryTableAtPath + 2004 (CoreFoundation) [0x7fff849afae4]
                                                  1   CFRelease + 511 (CoreFoundation) [0x7fff848db0ef]
                                                    1   __CFBasicHashDrain + 214 (CoreFoundation) [0x7fff848df466]
                                                     *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                            1   CGSDisplayInitialize + 195 (CoreGraphics) [0x7fff83478a7a]
                              1   _CSCheckFix + 19 (CarbonCore) [0x7fff81d20f9c]
                                1   GetBugsForOurBundleIDFromCoreservicesd + 571 (CarbonCore) [0x7fff81d21226]
                                  1   _CFBundleCopyInfoDictionaryInResourceForkWithAllocator + 55 (CoreFoundation) [0x7fff849417b7]
                                    1   CFURLGetFSRef + 41 (CoreFoundation) [0x7fff84939689]
                                      1   _CFGetFSRefFromURL + 226 (CoreFoundation) [0x7fff84939782]
                                        1   FSPathMakeRefInternal(unsigned char const*, unsigned int, unsigned int, FSRef*, unsigned char*) + 97 (CarbonCore) [0x7fff81d25ccd]
                                          1   PathGetObjectInfo(char const*, unsigned int, unsigned int, short*, unsigned int*, unsigned int*, char*, unsigned int*, unsigned char*) + 262 (CarbonCore) [0x7fff81d25e88]
                                            1   FSMount::FSMount(unsigned int, FSMountNumberType, short*, unsigned int const*) + 74 (CarbonCore) [0x7fff81d274b4]
                                              1   FileIDTreeGetAndLockVolumeEntryForDeviceID + 40 (CarbonCore) [0x7fff81d23869]
                                                1   FSNodeStorageGetAndLockCurrentUniverse + 63 (CarbonCore) [0x7fff81d239d9]
                                                  1   FileIDTreeGetCachedPort + 207 (CarbonCore) [0x7fff81d23b87]
                                                    1   scCreateSystemServiceVersion + 45 (CarbonCore) [0x7fff81d2023b]
                                                      1   pthread_mutex_lock + 128 (libsystem_c.dylib) [0x7fff85e4dc45]
                                                        1   _pthread_mutex_init + 158 (libsystem_c.dylib) [0x7fff85e4d35c]
                                                         *1   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
                                                           *1   user_trap + 649 (mach_kernel) [0xffffff80002b7f69]
                                                             *1   vm_fault + 3211 (mach_kernel) [0xffffff8000262a5b]
                                                               *1   vm_fault_enter + 1011 (mach_kernel) [0xffffff8000261633]
                                                                 *1   hw_lock_unlock + 46 (mach_kernel) [0xffffff80002ac50e]
                                                                   *1   ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                                                     *1   kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                                                       *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                                         *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                           *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                             *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                          2   __CGSInitialize_block_invoke_0 + 21 (CoreGraphics) [0x7fff83478841]
                            2   CGSInitializeOperatingFlags + 9 (CoreGraphics) [0x7fff8347889b]
                              2   CGSGetPerUserPerMachineKeys + 76 (CoreGraphics) [0x7fff834788eb]
                                2   CFArrayCreate + 181 (CoreFoundation) [0x7fff8490b2b5]
                                  2   +[NSArray allocWithZone:] + 79 (CoreFoundation) [0x7fff84915b1f]
                                    2   _CFAppVersionCheckLessThan + 38 (CoreFoundation) [0x7fff84918e16]
                                      2   cacheBundleInfo + 15 (CoreFoundation) [0x7fff84918e7f]
                                        2   CFBundleGetMainBundle + 27 (CoreFoundation) [0x7fff848fde1b]
                                          1   _CFBundleGetMainBundleAlreadyLocked + 158 (CoreFoundation) [0x7fff848fdece]
                                            1   _CFBundleCreate + 292 (CoreFoundation) [0x7fff8490ed04]
                                              1   _CFBundleURLLooksLikeBundleVersion + 63 (CoreFoundation) [0x7fff848efdff]
                                                1   _CFBundleCopySortedDirectoryContentsAtPath + 1038 (CoreFoundation) [0x7fff848f05fe]
                                                  1   __open_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab3902a]
                                                   *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                     *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                       *1   open_nocancel + 242 (mach_kernel) [0xffffff80002fc3e2]
                                                         *1   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                                           *1   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                                             *1   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                                               *1   nfs_vnop_open + 582 (mach_kernel) [0xffffff8000499e86]
                                                                 *1   nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                                                                   *1   nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                                                                     *1   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                                       *1   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                                         *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                           *1   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                                             *1   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                                               *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                 *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                   *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                          1   _CFBundleGetMainBundleAlreadyLocked + 250 (CoreFoundation) [0x7fff848fdf2a]
                                            1   __open + 10 (libsystem_kernel.dylib) [0x7fff8ab38fee]
                                             *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                               *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                 *1   open + 260 (mach_kernel) [0xffffff80002fc2d4]
                                                   *1   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                                     *1   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                                       *1   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                                         *1   nfs_vnop_open + 582 (mach_kernel) [0xffffff8000499e86]
                                                           *1   nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                                                             *1   nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                                                               *1   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                                 *1   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                                   *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                     *1   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                                       *1   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                                         *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                           *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                             *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                    1   CGSNewConnection + 492 (CoreGraphics) [0x7fff8347b441]
                      1   LSCopyItemInfoForURL + 101 (LaunchServices) [0x7fff8732faa2]
                        1   _LSCopyInfoForNode + 113 (LaunchServices) [0x7fff872ea6c9]
                          1   _LSContextInit + 343 (LaunchServices) [0x7fff872e0b73]
                            1   _LSCopyServerStore + 29 (LaunchServices) [0x7fff872e0fc8]
                              1   _LSPluginGetServerPort + 70 (LaunchServices) [0x7fff872e1097]
                                1   scCreateSystemServiceVersion + 106 (CarbonCore) [0x7fff81d20278]
                                  1   SCSession::findOrCreateService(char const*, unsigned int) + 228 (CarbonCore) [0x7fff81d20a74]
                                    1   SCClientSession::createService(char const*, unsigned int) + 68 (CarbonCore) [0x7fff81d20b98]
                                      1   _scsclient_FindService + 162 (CarbonCore) [0x7fff81d20cc5]
                                        1   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                         *1   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
              1   apple_init_glx + 117 (libGL.1.dylib) [0x1006e1d50]
                1   _apple_glx_log + 120 (libGL.1.dylib) [0x1006e3289]
                  1   _apple_glx_vlog + 198 (libGL.1.dylib) [0x1006e3367]
                    1   vfprintf_l + 685 (libsystem_c.dylib) [0x7fff85ebc335]
                      1   __sflush + 94 (libsystem_c.dylib) [0x7fff85eb0b00]
                        1   __write_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab396fe]
                         *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
          9   __glXInitialize + 550 (libGL.1.dylib) [0x1006e8a0b]
            9   applegl_create_screen + 127 (libGL.1.dylib) [0x1006eaf42]
              7   glx_screen_init + 387 (libGL.1.dylib) [0x1006e876b]
                7   createConfigsFromProperties + 252 (libGL.1.dylib) [0x1006e925b]
                  7   __glXInitializeVisualConfigFromTags + 510 (libGL.1.dylib) [0x1006e82ee]
                    7   fprintf + 186 (libsystem_c.dylib) [0x7fff85eb1ce7]
                      7   vfprintf_l + 685 (libsystem_c.dylib) [0x7fff85ebc335]
                        7   __sflush + 94 (libsystem_c.dylib) [0x7fff85eb0b00]
                          7   __write_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab396fe]
                           *5   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                             *4   <suspended>
                           *2   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                             *2   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                               *2   write_nocancel + 199 (mach_kernel) [0xffffff8000576f97]
                                 *2   ??? (mach_kernel + 3633289) [0xffffff8000577089]
                                   *2   ??? (mach_kernel + 1081657) [0xffffff8000308139]
                                     *2   VNOP_WRITE + 82 (mach_kernel) [0xffffff8000311d62]
                                       *1   ??? (mach_kernel + 1201006) [0xffffff800032536e]
                                         *1   ??? (mach_kernel + 1201485) [0xffffff800032554d]
                                           *1   microtime + 25 (mach_kernel) [0xffffff8000570fb9]
                                             *1   clock_get_calendar_microtime + 23 (mach_kernel) [0xffffff800021bd97]
                                               *1   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                                                 *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                   *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                     *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                       *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                         *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                       *1   spec_write + 189 (mach_kernel) [0xffffff800032094d]
                                         *1   ??? (mach_kernel + 3685510) [0xffffff8000583c86]
                                           *1   ttwrite + 871 (mach_kernel) [0xffffff8000580867]
                                             *1   msleep0 + 100 (mach_kernel) [0xffffff800056a254]
                                               *1   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                 *1   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                   *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                     *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                       *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
              2   glx_screen_init + 125 (libGL.1.dylib) [0x1006e8665]
                2   _XReply + 81 (libX11.6.dylib) [0x100785676]
                  2   _XSend + 331 (libX11.6.dylib) [0x100784d48]
                    2   xcb_writev + 68 (libxcb.1.dylib) [0x100d321e5]
                      2   _xcb_out_send + 68 (libxcb.1.dylib) [0x100d32244]
                        2   writev + 10 (libsystem_kernel.dylib) [0x7fff8ab3a4be]
                         *2   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
    49  main + 637 (causes_fault) [0x1006dddbd]
      49  XSync + 71 (libX11.6.dylib) [0x100781ec5]
        46  _XReply + 215 (libX11.6.dylib) [0x1007856fc]
          46  xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
            46  wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
              46  __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
               *46  ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
        2   _XReply + 345 (libX11.6.dylib) [0x10078577e]
          2   handle_response + 132 (libX11.6.dylib) [0x1007850a7]
            2   _XEnq + 152 (libX11.6.dylib) [0x100787008]
              2   wire_to_event + 72 (libGL.1.dylib) [0x1006e53c1]
                1   apple_glx_surface_destroy + 46 (libGL.1.dylib) [0x1006e3f1a]
                  1   destroy_drawable_callback + 79 (libGL.1.dylib) [0x1006e318c]
                    1   _apple_glx_log + 120 (libGL.1.dylib) [0x1006e3289]
                      1   _apple_glx_vlog + 198 (libGL.1.dylib) [0x1006e3367]
                        1   vfprintf_l + 685 (libsystem_c.dylib) [0x7fff85ebc335]
                          1   __sflush + 94 (libsystem_c.dylib) [0x7fff85eb0b00]
                            1   __write_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab396fe]
                             *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                               *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                 *1   write_nocancel + 199 (mach_kernel) [0xffffff8000576f97]
                                   *1   ??? (mach_kernel + 3633289) [0xffffff8000577089]
                                     *1   ??? (mach_kernel + 1081657) [0xffffff8000308139]
                                       *1   VNOP_WRITE + 82 (mach_kernel) [0xffffff8000311d62]
                                         *1   spec_write + 189 (mach_kernel) [0xffffff800032094d]
                                           *1   ??? (mach_kernel + 3685510) [0xffffff8000583c86]
                                             *1   ttwrite + 871 (mach_kernel) [0xffffff8000580867]
                                               *1   msleep0 + 100 (mach_kernel) [0xffffff800056a254]
                                                 *1   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                   *1   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                     *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                       *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                         *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                1   surface_notify_handler + 123 (libGL.1.dylib) [0x1006e1dfd]
                  1   _apple_glx_log + 120 (libGL.1.dylib) [0x1006e3289]
                    1   _apple_glx_vlog + 198 (libGL.1.dylib) [0x1006e3367]
                      1   vfprintf_l + 685 (libsystem_c.dylib) [0x7fff85ebc335]
                        1   __sflush + 94 (libsystem_c.dylib) [0x7fff85eb0b00]
                          1   __write_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab396fe]
                           *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                             *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                               *1   write_nocancel + 199 (mach_kernel) [0xffffff8000576f97]
                                 *1   ??? (mach_kernel + 3633289) [0xffffff8000577089]
                                   *1   ??? (mach_kernel + 1081657) [0xffffff8000308139]
                                     *1   VNOP_WRITE + 82 (mach_kernel) [0xffffff8000311d62]
                                       *1   spec_write + 189 (mach_kernel) [0xffffff800032094d]
                                         *1   ??? (mach_kernel + 3685510) [0xffffff8000583c86]
                                           *1   ttwrite + 871 (mach_kernel) [0xffffff8000580867]
                                             *1   msleep0 + 100 (mach_kernel) [0xffffff800056a254]
                                               *1   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                 *1   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                   *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                     *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                       *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
        1   _XReply + 353 (libX11.6.dylib) [0x100785786]
          1   _xcb_in_wake_up_next_reader + 68 (libxcb.1.dylib) [0x100d329b8]
           *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
    42  main + 476 (causes_fault) [0x1006ddd1c]
      42  XtAppCreateShell + 190 (libXt.6.dylib) [0x100cb5dad]
        42  _XtAppCreateShell + 208 (libXt.6.dylib) [0x100cb5cc1]
          40  xtCreate + 561 (libXt.6.dylib) [0x100cb55cc]
            40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
              40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                  40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                    40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                      40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                        40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                          40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                            40  CallInitialize + 101 (libXt.6.dylib) [0x100cb61cd]
                              40  CallInitialize + 147 (libXt.6.dylib) [0x100cb61fb]
                                40  InitializeRootWrapper + 244 (libXm.3.0.2.dylib) [0x100a32bd4]
                                  40  InitializePrehook + 224 (libXm.3.0.2.dylib) [0x100a4e480]
                                    29  SecondaryObjectCreate + 60 (libXm.3.0.2.dylib) [0x100a4e06c]
                                      29  XmGetXmDisplay + 41 (libXm.3.0.2.dylib) [0x100a494b9]
                                        29  GetDisplay + 429 (libXm.3.0.2.dylib) [0x100a493dd]
                                          29  XtAppCreateShell + 190 (libXt.6.dylib) [0x100cb5dad]
                                            29  _XtAppCreateShell + 208 (libXt.6.dylib) [0x100cb5cc1]
                                              29  xtCreate + 561 (libXt.6.dylib) [0x100cb55cc]
                                                21  CallInitialize + 147 (libXt.6.dylib) [0x100cb61fb]
                                                  11  DisplayInitialize + 290 (libXm.3.0.2.dylib) [0x100a47e02]
                                                    11  _XmGetDragProxyWindow + 48 (libXm.3.0.2.dylib) [0x1008ba7a0]
                                                      11  ReadMotifWindow + 253 (libXm.3.0.2.dylib) [0x1008b7e3d]
                                                        11  XGetWindowProperty + 193 (libX11.6.dylib) [0x10076f52b]
                                                          11  _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                                                            11  xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                                                              11  wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                                                                11  __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                                                                 *7   ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                                                                 *4   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                                   *4   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                                     *4   select_nocancel + 1268 (mach_kernel) [0xffffff8000578064]
                                                                       *4   selprocess + 1126 (mach_kernel) [0xffffff80005784e6]
                                                                         *4   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                                                                           *4   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                                             *4   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                                               *4   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                 *4   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                   *4   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                  10  DisplayInitialize + 700 (libXm.3.0.2.dylib) [0x100a47f9c]
                                                    6   _XmVirtKeysInitialize + 339 (libXm.3.0.2.dylib) [0x1009db823]
                                                      6   GetBindingsProperty + 222 (libXm.3.0.2.dylib) [0x1009db65e]
                                                        6   XGetWindowProperty + 193 (libX11.6.dylib) [0x10076f52b]
                                                          6   _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                                                            6   xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                                                              6   wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                                                                6   __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                                                                 *6   ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                                                    4   _XmVirtKeysInitialize + 402 (libXm.3.0.2.dylib) [0x1009db862]
                                                      4   GetBindingsProperty + 222 (libXm.3.0.2.dylib) [0x1009db65e]
                                                        4   XGetWindowProperty + 193 (libX11.6.dylib) [0x10076f52b]
                                                          4   _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                                                            4   xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                                                              3   wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                                                                3   __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                                                                 *3   ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                                                              1   wait_for_reply + 289 (libxcb.1.dylib) [0x100d325b3]
                                                                1   _xcb_in_wake_up_next_reader + 31 (libxcb.1.dylib) [0x100d32993]
                                                                  1   OSAtomicCompareAndSwap64Barrier$VARIANT$mp + 8 (libsystem_c.dylib) [0x7fff85e36cdc]
                                                                   *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                                                     *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                                       *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                                         *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                           *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                             *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                8   CallInitialize + 190 (libXt.6.dylib) [0x100cb6226]
                                                  8   _XmColorObjCreate + 260 (libXm.3.0.2.dylib) [0x100a8cd84]
                                                    8   XtAppCreateShell + 190 (libXt.6.dylib) [0x100cb5dad]
                                                      8   _XtAppCreateShell + 208 (libXt.6.dylib) [0x100cb5cc1]
                                                        8   xtCreate + 561 (libXt.6.dylib) [0x100cb55cc]
                                                          8   CallInitialize + 147 (libXt.6.dylib) [0x100cb61fb]
                                                            4   Initialize + 1597 (libXm.3.0.2.dylib) [0x100a8d57d]
                                                              4   XGetSelectionOwner + 75 (libX11.6.dylib) [0x10076f911]
                                                                4   _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                                                                  4   xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                                                                    4   wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                                                                      3   __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                                                                       *3   ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                                                                      1   _xcb_conn_wait + 404 (libxcb.1.dylib) [0x100d317cd]
                                                                        1   __recvfrom + 10 (libsystem_kernel.dylib) [0x7fff8ab392aa]
                                                                         *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                                           *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                                             *1   recvfrom_nocancel + 255 (mach_kernel) [0xffffff80005a0c8f]
                                                                               *1   ??? (mach_kernel + 3804910) [0xffffff80005a0eee]
                                                                                 *1   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                                                                                   *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                                                     *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                                                       *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                         *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                           *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                                            4   Initialize + 1800 (libXm.3.0.2.dylib) [0x100a8d648]
                                                              4   XInternAtom + 158 (libX11.6.dylib) [0x10077317d]
                                                                4   _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                                                                  4   xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                                                                    4   wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                                                                      4   __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                                                                       *4   ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                                    11  SecondaryObjectCreate + 179 (libXm.3.0.2.dylib) [0x100a4e0e3]
                                      11  GetShellDesktopParent + 477 (libXm.3.0.2.dylib) [0x100a4dfed]
                                        11  XmGetXmScreen + 868 (libXm.3.0.2.dylib) [0x100a4ba34]
                                          11  XtCreateWidget + 173 (libXt.6.dylib) [0x100cb5926]
                                            11  _XtCreateWidget + 603 (libXt.6.dylib) [0x100cb5374]
                                              7   xtCreate + 561 (libXt.6.dylib) [0x100cb55cc]
                                                7   CallInitialize + 147 (libXt.6.dylib) [0x100cb61fb]
                                                  7   Initialize + 185 (libXm.3.0.2.dylib) [0x100a49ca9]
                                                    7   XQueryBestCursor + 108 (libX11.6.dylib) [0x10077caf5]
                                                      7   _XReply + 215 (libX11.6.dylib) [0x1007856fc]
                                                        7   xcb_wait_for_reply + 103 (libxcb.1.dylib) [0x100d3247b]
                                                          7   wait_for_reply + 215 (libxcb.1.dylib) [0x100d32569]
                                                            7   __select + 10 (libsystem_kernel.dylib) [0x7fff8ab39322]
                                                             *7   ??? (mach_kernel + 3581120) [0xffffff800056a4c0]
                                              4   xtCreate + 356 (libXt.6.dylib) [0x100cb54ff]
                                                4   _XtGetResources + 381 (libXt.6.dylib) [0x100cc7fe4]
                                                  4   GetResources + 2858 (libXt.6.dylib) [0x100cc8d8c]
                                                    4   _XtConvert + 1148 (libXt.6.dylib) [0x100cb0d5e]
                                                      4   CallConverter + 511 (libXt.6.dylib) [0x100cb0711]
                                                        4   XtCvtStringToCursor + 180 (libXt.6.dylib) [0x100cb1f19]
                                                          4   XCreateFontCursor + 95 (libX11.6.dylib) [0x1007692e2]
                                                            4   XCreateGlyphCursor + 117 (libX11.6.dylib) [0x100768dcd]
                                                              4   open_library + 74 (libX11.6.dylib) [0x100768b5b]
                                                                4   dlopen + 57 (libdyld.dylib) [0x7fff896ffdd8]
                                                                  4   dlopen + 426 (dyld) [0x7fff602e77e1]
                                                                    4   dyld::load(char const*, dyld::LoadContext const&) + 214 (dyld) [0x7fff602dff08]
                                                                      4   dyld::loadPhase0(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 190 (dyld) [0x7fff602e019b]
                                                                        4   dyld::loadPhase1(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 135 (dyld) [0x7fff602e4c31]
                                                                          4   dyld::loadPhase3(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1399 (dyld) [0x7fff602e54fa]
                                                                            4   dyld::loadPhase4(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 158 (dyld) [0x7fff602e560e]
                                                                              4   stat64 + 10 (dyld) [0x7fff60301cd6]
                                                                               *4   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                                                 *4   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                                                   *4   stat64 + 140 (mach_kernel) [0xffffff80002fe3cc]
                                                                                     *4   ??? (mach_kernel + 1071570) [0xffffff80003059d2]
                                                                                       *4   namei + 1454 (mach_kernel) [0xffffff80002eb14e]
                                                                                         *4   lookup + 556 (mach_kernel) [0xffffff80002eb75c]
                                                                                           *4   VNOP_LOOKUP + 52 (mach_kernel) [0xffffff8000311634]
                                                                                             *4   nfs_vnop_lookup + 899 (mach_kernel) [0xffffff800049df93]
                                                                                               *4   nfs3_lookup_rpc_async_finish + 122 (mach_kernel) [0xffffff80004a98fa]
                                                                                                 *4   nfs_request_async_finish + 322 (mach_kernel) [0xffffff8000479aa2]
                                                                                                   *4   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                                                                     *4   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                                                       *4   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                                                                         *4   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                                                                           *4   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                                             *4   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                                               *4   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
          2   xtCreate + 114 (libXt.6.dylib) [0x100cb540d]
            2   xtWidgetAlloc + 77 (libXt.6.dylib) [0x100cb5fb4]
              2   XtInitializeWidgetClass + 517 (libXt.6.dylib) [0x100cb5096]
                2   XtInitializeWidgetClass + 517 (libXt.6.dylib) [0x100cb5096]
                  2   XtInitializeWidgetClass + 539 (libXt.6.dylib) [0x100cb50ac]
                    1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                      1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                        1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                          1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                            1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                              1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                                1   CallClassPartInit + 29 (libXt.6.dylib) [0x100cb5102]
                                  1   ClassPartInitRootWrapper + 217 (libXm.3.0.2.dylib) [0x100a324d9]
                                    1   ObjectClassPartInitialize + 44 (libXt.6.dylib) [0x100cc5200]
                                      1   _XtCompileResourceList + 26 (libXt.6.dylib) [0x100cc7bd1]
                                        1   _XrmInternalStringToQuark + 12 (libX11.6.dylib) [0x10077c13f]
                                          1   <executing in user space>
                    1   ClassPartInitialize + 954 (libXm.3.0.2.dylib) [0x100a4c95a]
                      1   _XmAddHashEntry + 1 (libXm.3.0.2.dylib) [0x100a75511]
                       *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                         *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                           *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                             *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                               *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                 *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
    39  main + 535 (causes_fault) [0x1006ddd57]
      39  XtRealizeWidget + 126 (libXt.6.dylib) [0x100cbfdc8]
        39  RealizeWidget + 337 (libXt.6.dylib) [0x100cc0051]
          39  RealizeWrapper2 + 54 (libXm.3.0.2.dylib) [0x100a30b16]
            39  RealizeWrapper + 227 (libXm.3.0.2.dylib) [0x100a30e73]
              39  Realize + 531 (libXm.3.0.2.dylib) [0x100a509a3]
                39  _XmImRealize + 58 (libXm.3.0.2.dylib) [0x100a40cea]
                  39  get_xim_info + 668 (libXm.3.0.2.dylib) [0x100a4546c]
                    36  _XimOpenIM + 414 (libX11.6.dylib) [0x1007a7b98]
                      36  _XimLocalOpenIM + 1518 (libX11.6.dylib) [0x1007a8cf6]
                        11  parsestringfile + 2529 (libX11.6.dylib) [0x1007aa99d]
                          8   _Xlcmbstoutf8 + 188 (libX11.6.dylib) [0x100798bfa]
                            5   close_indirect_converter + 46 (libX11.6.dylib) [0x10079356c]
                              5   free + 199 (libsystem_c.dylib) [0x7fff85e618c8]
                                4   _spin_lock$VARIANT$mp + 13 (libsystem_c.dylib) [0x7fff85e36f7d]
                                 *4   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                                1   szone_free_definite_size + 582 (libsystem_c.dylib) [0x7fff85e6726f]
                                 *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                   *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                     *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                       *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                         *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                           *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                            3   close_indirect_converter + 54 (libX11.6.dylib) [0x100793574]
                              3   free + 199 (libsystem_c.dylib) [0x7fff85e618c8]
                                3   tiny_free_scan_madvise_free + 651 (libsystem_c.dylib) [0x7fff85e6b7ac]
                                 *3   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                   *3   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                     *3   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                       *3   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                         *3   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                           *3   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                          3   _Xlcmbstoutf8 + 75 (libX11.6.dylib) [0x100798b89]
                            2   _XlcOpenConverter + 148 (libX11.6.dylib) [0x10079334c]
                              2   XrmStringToQuark + 36 (libX11.6.dylib) [0x10077c5be]
                               *2   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                            1   _XlcOpenConverter + 293 (libX11.6.dylib) [0x1007933dd]
                              1   get_converter + 28 (libX11.6.dylib) [0x1007934ba]
                               *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                 *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                   *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                     *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                       *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                         *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                        8   parsestringfile + 832 (libX11.6.dylib) [0x1007aa2fc]
                          7   nexttoken + 211 (libX11.6.dylib) [0x1007aad7d]
                            7   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              7   getc + 89 (libsystem_c.dylib) [0x7fff85eb3a90]
                                7   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                  7   __mtx_droplock + 49 (libsystem_c.dylib) [0x7fff85e4d6e7]
                                   *7   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                     *7   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                       *7   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                         *7   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                           *7   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                             *7   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                          1   nexttoken + 349 (libX11.6.dylib) [0x1007aae07]
                            1   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              1   getc + 89 (libsystem_c.dylib) [0x7fff85eb3a90]
                                1   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                  1   __mtx_droplock + 685 (libsystem_c.dylib) [0x7fff85e4d963]
                                    1   <executing in user space>
                        8   parsestringfile + 652 (libX11.6.dylib) [0x1007aa248]
                          6   nexttoken + 716 (libX11.6.dylib) [0x1007aaf76]
                            6   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              5   getc + 89 (libsystem_c.dylib) [0x7fff85eb3a90]
                                5   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                  5   __mtx_droplock + 225 (libsystem_c.dylib) [0x7fff85e4d797]
                                   *5   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                     *5   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                       *5   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                         *5   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                           *5   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                             *5   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                              1   getc + 30 (libsystem_c.dylib) [0x7fff85eb3a55]
                                1   flockfile + 42 (libsystem_c.dylib) [0x7fff85eb0337]
                                  1   OSAtomicCompareAndSwap64Barrier$VARIANT$mp + 8 (libsystem_c.dylib) [0x7fff85e36cdc]
                                    1   <executing in user space>
                          1   nexttoken + 49 (libX11.6.dylib) [0x1007aacdb]
                            1   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              1   getc + 89 (libsystem_c.dylib) [0x7fff85eb3a90]
                                1   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                  1   __mtx_droplock + 300 (libsystem_c.dylib) [0x7fff85e4d7e2]
                                    1   <executing in user space>
                          1   nexttoken + 703 (libX11.6.dylib) [0x1007aaf69]
                            1   <executing in user space>
                        2   parsestringfile + 2000 (libX11.6.dylib) [0x1007aa78c]
                          2   nexttoken + 49 (libX11.6.dylib) [0x1007aacdb]
                            2   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              2   getc + 89 (libsystem_c.dylib) [0x7fff85eb3a90]
                                2   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                  2   __mtx_droplock + 673 (libsystem_c.dylib) [0x7fff85e4d957]
                                    1   <executing in user space>
                                   *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                     *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                       *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                         *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                           *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                             *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                        2   parsestringfile + 230 (libX11.6.dylib) [0x1007aa0a2]
                          2   nexttoken + 49 (libX11.6.dylib) [0x1007aacdb]
                            2   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              2   getc + 30 (libsystem_c.dylib) [0x7fff85eb3a55]
                                2   flockfile + 42 (libsystem_c.dylib) [0x7fff85eb0337]
                                 *2   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                        2   parsestringfile + 2346 (libX11.6.dylib) [0x1007aa8e6]
                          1   _Xlcmbstowcs + 145 (libX11.6.dylib) [0x1007988b6]
                            1   def_mbstowcs + 138 (libX11.6.dylib) [0x1007b1c56]
                              1   <executing in user space>
                          1   _Xlcmbstowcs + 75 (libX11.6.dylib) [0x100798870]
                            1   _XlcOpenConverter + 65 (libX11.6.dylib) [0x1007932f9]
                              1   create_conv + 35 (libX11.6.dylib) [0x1007b12db]
                                1   calloc + 48 (libsystem_c.dylib) [0x7fff85e61c24]
                                  1   <executing in user space>
                        1   parsestringfile + 2785 (libX11.6.dylib) [0x1007aaa9d]
                         *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                        1   parsestringfile + 792 (libX11.6.dylib) [0x1007aa2d4]
                          1   nexttoken + 49 (libX11.6.dylib) [0x1007aacdb]
                            1   nextch + 31 (libX11.6.dylib) [0x1007ab033]
                              1   getc + 30 (libsystem_c.dylib) [0x7fff85eb3a55]
                                1   flockfile + 42 (libsystem_c.dylib) [0x7fff85eb0337]
                                  1   DYLD-STUB$$OSAtomicCompareAndSwap64 + 6 (libsystem_c.dylib) [0x7fff85ed7c2a]
                                    1   <executing in user space>
                        1   parsestringfile + 700 (libX11.6.dylib) [0x1007aa278]
                          1   XStringToKeysym + 84 (libX11.6.dylib) [0x100781a62]
                            1   <executing in user space>
                    3   _XimOpenIM + 400 (libX11.6.dylib) [0x1007a7b8a]
                      3   _XimCheckIfLocalProcessing + 85 (libX11.6.dylib) [0x1007a83f1]
                        3   _XlcFileName + 308 (libX11.6.dylib) [0x100794e38]
                          3   resolve_name + 265 (libX11.6.dylib) [0x100795077]
                            1   fgets + 58 (libsystem_c.dylib) [0x7fff85eb0e4f]
                              1   flockfile + 42 (libsystem_c.dylib) [0x7fff85eb0337]
                                1   OSAtomicCompareAndSwap64Barrier$VARIANT$mp + 8 (libsystem_c.dylib) [0x7fff85e36cdc]
                                  1   <executing in user space>
                            1   fgets + 334 (libsystem_c.dylib) [0x7fff85eb0f63]
                              1   pthread_mutex_unlock + 268 (libsystem_c.dylib) [0x7fff85e4e175]
                                1   __mtx_droplock + 613 (libsystem_c.dylib) [0x7fff85e4d91b]
                                 *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                            1   fgets + 208 (libsystem_c.dylib) [0x7fff85eb0ee5]
                              1   __srefill1 + 27 (libsystem_c.dylib) [0x7fff85eb4d57]
                                1   __read_nocancel + 10 (libsystem_kernel.dylib) [0x7fff8ab39282]
                                 *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                   *1   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                                     *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                       *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                         *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                           *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                             *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
    10  main + 370 (causes_fault) [0x1006ddcb2]
      10  glXCreateContext + 105 (libGL.1.dylib) [0x1006e6870]
        10  CreateContext + 115 (libGL.1.dylib) [0x1006e692b]
          10  applegl_create_context + 163 (libGL.1.dylib) [0x1006eae5a]
            9   apple_glx_create_context + 187 (libGL.1.dylib) [0x1006e1f2e]
              9   apple_visual_create_pfobj + 822 (libGL.1.dylib) [0x1006e4465]
                8   CGLChoosePixelFormat + 122 (OpenGL) [0x7fff817b653a]
                  7   ??? (OpenGL + 36505) [0x7fff817b6e99]
                    7   ??? (OpenGL + 8337) [0x7fff817b0091]
                      4   ??? (OpenGL + 8857) [0x7fff817b0299]
                        4   dlopen + 57 (libdyld.dylib) [0x7fff896ffdd8]
                          3   dlopen + 483 (dyld) [0x7fff602e781a]
                            3   dyld::link(ImageLoader*, bool, ImageLoader::RPathChain const&) + 547 (dyld) [0x7fff602e1ce4]
                              2   ImageLoader::link(ImageLoader::LinkContext const&, bool, bool, ImageLoader::RPathChain const&) + 76 (dyld) [0x7fff602ebfbc]
                                2   ImageLoader::recursiveLoadLibraries(ImageLoader::LinkContext const&, bool, ImageLoader::RPathChain const&) + 366 (dyld) [0x7fff602ec29c]
                                  2   dyld::libraryLocator(char const*, bool, char const*, ImageLoader::RPathChain const*) + 52 (dyld) [0x7fff602e429c]
                                    2   dyld::load(char const*, dyld::LoadContext const&) + 214 (dyld) [0x7fff602dff08]
                                      2   dyld::loadPhase0(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 190 (dyld) [0x7fff602e019b]
                                        2   dyld::loadPhase1(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 135 (dyld) [0x7fff602e4c31]
                                          2   dyld::loadPhase3(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1399 (dyld) [0x7fff602e54fa]
                                            2   dyld::loadPhase4(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 158 (dyld) [0x7fff602e560e]
                                              2   open + 10 (dyld) [0x7fff60301ae2]
                                               *2   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                                 *2   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                   *2   open + 260 (mach_kernel) [0xffffff80002fc2d4]
                                                     *2   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                                       *2   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                                         *2   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                                           *2   hfs_vnop_open + 232 (mach_kernel) [0xffffff8000512b28]
                                                             *2   decmpfs_validate_compressed_file + 274 (mach_kernel) [0xffffff8000326e02]
                                                               *2   vnode_validate_compressed_file_Type4 + 109 (AppleFSCompressionTypeZlib) [0xffffff7f82131514]
                                                                 *2   doValidateType4 + 139 (AppleFSCompressionTypeZlib) [0xffffff7f8213117a]
                                                                   *2   _getxattr + 221 (AppleFSCompressionTypeZlib) [0xffffff7f82130285]
                                                                     *2   VNOP_GETXATTR + 63 (mach_kernel) [0xffffff800031379f]
                                                                       *2   hfs_vnop_getxattr + 691 (mach_kernel) [0xffffff80005198a3]
                                                                         *2   VNOP_READ + 77 (mach_kernel) [0xffffff8000311cfd]
                                                                           *2   hfs_vnop_read + 550 (mach_kernel) [0xffffff80004faea6]
                                                                             *2   cluster_read_ext + 882 (mach_kernel) [0xffffff80002e5702]
                                                                               *2   ??? (mach_kernel + 947589) [0xffffff80002e7585]
                                                                                 *2   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                                   *2   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                                                     *2   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                                                       *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                         *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                           *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                              1   ImageLoader::link(ImageLoader::LinkContext const&, bool, bool, ImageLoader::RPathChain const&) + 138 (dyld) [0x7fff602ebffa]
                                1   ImageLoader::recursiveRebase(ImageLoader::LinkContext const&) + 96 (dyld) [0x7fff602ec7fa]
                                  1   ImageLoader::recursiveRebase(ImageLoader::LinkContext const&) + 163 (dyld) [0x7fff602ec83d]
                                    1   ImageLoaderMachOCompressed::rebase(ImageLoader::LinkContext const&) + 1996 (dyld) [0x7fff602f4ffc]
                                     *1   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
                                       *1   user_trap + 649 (mach_kernel) [0xffffff80002b7f69]
                                         *1   vm_fault + 2730 (mach_kernel) [0xffffff800026287a]
                                           *1   vm_fault_page + 707 (mach_kernel) [0xffffff800025eec3]
                                             *1   vnode_pager_data_request + 99 (mach_kernel) [0xffffff800025b543]
                                               *1   vnode_pager_cluster_read + 69 (mach_kernel) [0xffffff800025c035]
                                                 *1   vnode_pagein + 207 (mach_kernel) [0xffffff80005bfbff]
                                                   *1   VNOP_PAGEIN + 70 (mach_kernel) [0xffffff80003135e6]
                                                     *1   hfs_vnop_pagein + 574 (mach_kernel) [0xffffff80004ff4ae]
                                                       *1   decmpfs_pagein_compressed + 532 (mach_kernel) [0xffffff8000327ea4]
                                                         *1   ??? (mach_kernel + 1213045) [0xffffff8000328275]
                                                           *1   vnode_fetch_uncompressed_data_Type4 + 111 (AppleFSCompressionTypeZlib) [0xffffff7f821315c8]
                                                             *1   doUncompressType4 + 171 (AppleFSCompressionTypeZlib) [0xffffff7f821313de]
                                                               *1   _getxattr + 221 (AppleFSCompressionTypeZlib) [0xffffff7f82130285]
                                                                 *1   VNOP_GETXATTR + 63 (mach_kernel) [0xffffff800031379f]
                                                                   *1   hfs_vnop_getxattr + 691 (mach_kernel) [0xffffff80005198a3]
                                                                     *1   VNOP_READ + 77 (mach_kernel) [0xffffff8000311cfd]
                                                                       *1   hfs_vnop_read + 550 (mach_kernel) [0xffffff80004faea6]
                                                                         *1   cluster_read_ext + 882 (mach_kernel) [0xffffff80002e5702]
                                                                           *1   ??? (mach_kernel + 947589) [0xffffff80002e7585]
                                                                             *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                               *1   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                                                 *1   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                                                   *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                     *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                       *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                          1   dlopen + 426 (dyld) [0x7fff602e77e1]
                            1   dyld::load(char const*, dyld::LoadContext const&) + 214 (dyld) [0x7fff602dff08]
                              1   dyld::loadPhase0(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 190 (dyld) [0x7fff602e019b]
                                1   dyld::loadPhase1(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 135 (dyld) [0x7fff602e4c31]
                                  1   dyld::loadPhase3(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1399 (dyld) [0x7fff602e54fa]
                                    1   dyld::loadPhase4(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 158 (dyld) [0x7fff602e560e]
                                      1   open + 10 (dyld) [0x7fff60301ae2]
                                       *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                         *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                           *1   open + 260 (mach_kernel) [0xffffff80002fc2d4]
                                             *1   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                               *1   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                                 *1   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                                   *1   hfs_vnop_open + 232 (mach_kernel) [0xffffff8000512b28]
                                                     *1   decmpfs_validate_compressed_file + 274 (mach_kernel) [0xffffff8000326e02]
                                                       *1   vnode_validate_compressed_file_Type4 + 109 (AppleFSCompressionTypeZlib) [0xffffff7f82131514]
                                                         *1   doValidateType4 + 139 (AppleFSCompressionTypeZlib) [0xffffff7f8213117a]
                                                           *1   _getxattr + 221 (AppleFSCompressionTypeZlib) [0xffffff7f82130285]
                                                             *1   VNOP_GETXATTR + 63 (mach_kernel) [0xffffff800031379f]
                                                               *1   hfs_vnop_getxattr + 691 (mach_kernel) [0xffffff80005198a3]
                                                                 *1   VNOP_READ + 77 (mach_kernel) [0xffffff8000311cfd]
                                                                   *1   hfs_vnop_read + 550 (mach_kernel) [0xffffff80004faea6]
                                                                     *1   cluster_read_ext + 882 (mach_kernel) [0xffffff80002e5702]
                                                                       *1   ??? (mach_kernel + 947589) [0xffffff80002e7585]
                                                                         *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                           *1   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                                             *1   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                                               *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                 *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                   *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                      3   ??? (OpenGL + 8872) [0x7fff817b02a8]
                        3   ??? (OpenGL + 9190) [0x7fff817b03e6]
                          3   ??? [0x1015994ee]
                            3   gfxInitializeLibrary + 1257 (libGFXShared.dylib) [0x7fff82546a10]
                              3   dlopen + 57 (libdyld.dylib) [0x7fff896ffdd8]
                                2   dlopen + 483 (dyld) [0x7fff602e781a]
                                  2   dyld::link(ImageLoader*, bool, ImageLoader::RPathChain const&) + 547 (dyld) [0x7fff602e1ce4]
                                    2   ImageLoader::link(ImageLoader::LinkContext const&, bool, bool, ImageLoader::RPathChain const&) + 138 (dyld) [0x7fff602ebffa]
                                      2   ImageLoader::recursiveRebase(ImageLoader::LinkContext const&) + 163 (dyld) [0x7fff602ec83d]
                                        2   ImageLoaderMachOCompressed::rebase(ImageLoader::LinkContext const&) + 728 (dyld) [0x7fff602f4b08]
                                         *2   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
                                           *2   user_trap + 649 (mach_kernel) [0xffffff80002b7f69]
                                             *2   vm_fault + 2730 (mach_kernel) [0xffffff800026287a]
                                               *2   vm_fault_page + 3645 (mach_kernel) [0xffffff800025fa3d]
                                                 *2   lck_rw_sleep + 81 (mach_kernel) [0xffffff8000226ca1]
                                                   *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                     *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                       *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                1   dlopen + 426 (dyld) [0x7fff602e77e1]
                                  1   dyld::load(char const*, dyld::LoadContext const&) + 214 (dyld) [0x7fff602dff08]
                                    1   dyld::loadPhase0(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 190 (dyld) [0x7fff602e019b]
                                      1   dyld::loadPhase1(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 135 (dyld) [0x7fff602e4c31]
                                        1   dyld::loadPhase3(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1399 (dyld) [0x7fff602e54fa]
                                          1   dyld::loadPhase4(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 158 (dyld) [0x7fff602e560e]
                                            1   open + 10 (dyld) [0x7fff60301ae2]
                                             *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                               *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                                 *1   open + 260 (mach_kernel) [0xffffff80002fc2d4]
                                                   *1   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                                     *1   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                                       *1   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                                         *1   hfs_vnop_open + 232 (mach_kernel) [0xffffff8000512b28]
                                                           *1   decmpfs_validate_compressed_file + 274 (mach_kernel) [0xffffff8000326e02]
                                                             *1   vnode_validate_compressed_file_Type4 + 109 (AppleFSCompressionTypeZlib) [0xffffff7f82131514]
                                                               *1   doValidateType4 + 139 (AppleFSCompressionTypeZlib) [0xffffff7f8213117a]
                                                                 *1   _getxattr + 221 (AppleFSCompressionTypeZlib) [0xffffff7f82130285]
                                                                   *1   VNOP_GETXATTR + 63 (mach_kernel) [0xffffff800031379f]
                                                                     *1   hfs_vnop_getxattr + 691 (mach_kernel) [0xffffff80005198a3]
                                                                       *1   VNOP_READ + 77 (mach_kernel) [0xffffff8000311cfd]
                                                                         *1   hfs_vnop_read + 550 (mach_kernel) [0xffffff80004faea6]
                                                                           *1   cluster_read_ext + 882 (mach_kernel) [0xffffff80002e5702]
                                                                             *1   ??? (mach_kernel + 947589) [0xffffff80002e7585]
                                                                               *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                                                 *1   ??? (mach_kernel + 3579638) [0xffffff8000569ef6]
                                                                                   *1   lck_mtx_sleep + 78 (mach_kernel) [0xffffff80002265ce]
                                                                                     *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                                                       *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                                         *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                  1   ??? (OpenGL + 36339) [0x7fff817b6df3]
                    1   glcPluginCount + 23 (OpenGL) [0x7fff817afe9e]
                      1   ??? (OpenGL + 8009) [0x7fff817aff49]
                        1   gfxLoadPluginData + 332 (libGFXShared.dylib) [0x7fff825462ac]
                          1   CGSAcceleratorForDisplayAlias + 265 (CoreGraphics) [0x7fff834eaaeb]
                            1   displayAccelerator + 146 (CoreGraphics) [0x7fff834eabe3]
                              1   _CGSAcceleratorForDisplayNumber + 104 (CoreGraphics) [0x7fff834eacaa]
                                1   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                 *1   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                1   CGLChoosePixelFormat + 25 (OpenGL) [0x7fff817b64d9]
                  1   pthread_once + 87 (libsystem_c.dylib) [0x7fff85e49fd0]
                    1   ??? (OpenGL + 14886) [0x7fff817b1a26]
                     *1   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
                       *1   user_trap + 649 (mach_kernel) [0xffffff80002b7f69]
                         *1   vm_fault + 2730 (mach_kernel) [0xffffff800026287a]
                           *1   vm_fault_page + 3645 (mach_kernel) [0xffffff800025fa3d]
                             *1   lck_rw_sleep + 81 (mach_kernel) [0xffffff8000226ca1]
                               *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                 *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                   *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
            1   apple_glx_create_context + 218 (libGL.1.dylib) [0x1006e1f4d]
              1   CGLCreateContext + 1008 (OpenGL) [0x7fff817b29f9]
                1   ??? [0x101599ffc]
                  1   ??? [0x10159af3a]
                    1   ??? [0x101750090]
                      1   dyld_stub_binder_ + 13 (libdyld.dylib) [0x7fff896fe8ee]
                        1   dyld::fastBindLazySymbol(ImageLoader**, unsigned long) + 43 (dyld) [0x7fff602e0fe8]
                          1   <executing in user space>
    2   main + 623 (causes_fault) [0x1006dddaf]
      2   XtDestroyWidget + 321 (libXt.6.dylib) [0x100cb677c]
        2   _XtDoPhase2Destroy + 109 (libXt.6.dylib) [0x100cb634e]
          2   XtPhase2Destroy + 584 (libXt.6.dylib) [0x100cb65ac]
            2   Phase2Destroy + 223 (libXt.6.dylib) [0x100cb69ca]
              1   DisplayDestroy + 167 (libXm.3.0.2.dylib) [0x100a482b7]
                1   _XmClearDisplayTables + 57 (libXm.3.0.2.dylib) [0x1008b9a69]
                  1   SetTargetsTable + 494 (libXm.3.0.2.dylib) [0x1008b7aae]
                    1   <executing in user space>
              1   free + 199 (libsystem_c.dylib) [0x7fff85e618c8]
                1   szone_free_definite_size + 804 (libsystem_c.dylib) [0x7fff85e6734d]
                  1   get_tiny_previous_free_msize + 73 (libsystem_c.dylib) [0x7fff85e6b7f5]
                    1   <executing in user space>
    1   main + 189 (causes_fault) [0x1006ddbfd]
      1   _XtFindPopup + 71 (libXt.6.dylib) [0x100cd3e08]
       *1   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
         *1   user_trap + 649 (mach_kernel) [0xffffff80002b7f69]
           *1   vm_fault + 3211 (mach_kernel) [0xffffff8000262a5b]
             *1   vm_fault_enter + 1011 (mach_kernel) [0xffffff8000261633]
               *1   return_to_iret + 308 (mach_kernel) [0xffffff80002ce7ac]
                 *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                   *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                     *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                       *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                         *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
    1   main + 294 (causes_fault) [0x1006ddc66]
      1   XtOpenDisplay + 344 (libXt.6.dylib) [0x100cb6e3f]
        1   _XtDisplayInitialize + 508 (libXt.6.dylib) [0x100cbf424]
          1   XtScreenDatabase + 696 (libXt.6.dylib) [0x100cbea0b]
            1   XrmGetStringDatabase + 15 (libX11.6.dylib) [0x100789ee9]
              1   NewDatabase + 69 (libX11.6.dylib) [0x100788a86]
                1   _XrmInitParseInfo + 16 (libX11.6.dylib) [0x10079e727]
                  1   _XOpenLC + 257 (libX11.6.dylib) [0x10079e629]
                    1   _XlcUtf8Loader + 21 (libX11.6.dylib) [0x1007b4f8b]
                      1   _XlcCreateLC + 108 (libX11.6.dylib) [0x100797f8e]
                        1   initialize + 68 (libX11.6.dylib) [0x100795eb0]
                          1   initialize + 398 (libX11.6.dylib) [0x100798235]
                            1   _XlcResolveLocaleName + 218 (libX11.6.dylib) [0x10079519e]
                              1   resolve_name + 265 (libX11.6.dylib) [0x100795077]
                                1   fgets + 289 (libsystem_c.dylib) [0x7fff85eb0f36]
                                  1   memmove$VARIANT$sse3x + 31 (libsystem_c.dylib) [0x7fff85e35227]
                                   *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
  20  _dyld_start + 54 (dyld) [0x7fff602de05e]
    20  dyldbootstrap::start(macho_header const*, int, char const**, long, macho_header const*, unsigned long*) + 761 (dyld) [0x7fff602de397]
      7   dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) + 2886 (dyld) [0x7fff602e2a56]
        7   dyld::link(ImageLoader*, bool, ImageLoader::RPathChain const&) + 547 (dyld) [0x7fff602e1ce4]
          6   ImageLoader::link(ImageLoader::LinkContext const&, bool, bool, ImageLoader::RPathChain const&) + 76 (dyld) [0x7fff602ebfbc]
            5   ImageLoader::recursiveLoadLibraries(ImageLoader::LinkContext const&, bool, ImageLoader::RPathChain const&) + 366 (dyld) [0x7fff602ec29c]
              5   dyld::libraryLocator(char const*, bool, char const*, ImageLoader::RPathChain const*) + 52 (dyld) [0x7fff602e429c]
                5   dyld::load(char const*, dyld::LoadContext const&) + 214 (dyld) [0x7fff602dff08]
                  5   dyld::loadPhase0(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 190 (dyld) [0x7fff602e019b]
                    5   dyld::loadPhase1(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 135 (dyld) [0x7fff602e4c31]
                      5   dyld::loadPhase3(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1399 (dyld) [0x7fff602e54fa]
                        5   dyld::loadPhase4(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 158 (dyld) [0x7fff602e560e]
                          3   open + 10 (dyld) [0x7fff60301ae2]
                           *3   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                             *3   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                               *3   open + 260 (mach_kernel) [0xffffff80002fc2d4]
                                 *3   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                                   *2   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                                     *2   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                                       *2   nfs_vnop_open + 582 (mach_kernel) [0xffffff8000499e86]
                                         *2   nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                                           *2   nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                                             *2   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                               *2   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                 *2   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                   *2   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                     *2   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                       *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                         *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                           *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                   *1   vn_open_auth + 2081 (mach_kernel) [0xffffff8000309311]
                                     *1   vn_authorize_open_existing + 422 (mach_kernel) [0xffffff80002f5666]
                                       *1   kauth_authorize_action + 90 (mach_kernel) [0xffffff8000540d3a]
                                         *1   ??? (mach_kernel + 1001252) [0xffffff80002f4724]
                                           *1   VNOP_ACCESS + 70 (mach_kernel) [0xffffff8000311ca6]
                                             *1   nfs_vnop_access + 482 (mach_kernel) [0xffffff8000499c12]
                                               *1   nfs3_access_rpc + 540 (mach_kernel) [0xffffff80004997fc]
                                                 *1   nfs_request + 118 (mach_kernel) [0xffffff8000479236]
                                                   *1   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                     *1   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                       *1   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                         *1   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                           *1   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                             *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                               *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                 *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                          2   dyld::loadPhase5(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1405 (dyld) [0x7fff602e5baf]
                            2   dyld::loadPhase6(int, stat const&, char const*, dyld::LoadContext const&) + 501 (dyld) [0x7fff602e0558]
                              2   ImageLoaderMachO::instantiateFromFile(char const*, int, unsigned char const*, unsigned long long, unsigned long long, stat const&, ImageLoader::LinkContext const&) + 247 (dyld) [0x7fff602edf5b]
                                2   ImageLoaderMachOCompressed::instantiateFromFile(char const*, int, unsigned char const*, unsigned long long, unsigned long long, stat const&, unsigned int, unsigned int, linkedit_data_command const*, ImageLoader::LinkContext const&) + 261 (dyld) [0x7fff602f4105]
                                  2   __mmap + 10 (dyld) [0x7fff60301aba]
                                   *2   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                                     *2   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                       *2   mmap + 967 (mach_kernel) [0xffffff800055b477]
                                         *2   vnode_setattr + 135 (mach_kernel) [0xffffff8000310db7]
                                           *2   VNOP_SETATTR + 102 (mach_kernel) [0xffffff8000310ec6]
                                             *2   nfs_vnop_setattr + 2421 (mach_kernel) [0xffffff800049c585]
                                               *2   nfs3_setattr_rpc + 3339 (mach_kernel) [0xffffff800049d9cb]
                                                 *2   nfs_request + 118 (mach_kernel) [0xffffff8000479236]
                                                   *2   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                                     *2   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                                       *2   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                                         *2   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                                           *2   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                                             *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                               *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                                 *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
            1   ImageLoader::recursiveLoadLibraries(ImageLoader::LinkContext const&, bool, ImageLoader::RPathChain const&) + 1280 (dyld) [0x7fff602ec62e]
              1   ImageLoader::recursiveLoadLibraries(ImageLoader::LinkContext const&, bool, ImageLoader::RPathChain const&) + 366 (dyld) [0x7fff602ec29c]
                1   dyld::libraryLocator(char const*, bool, char const*, ImageLoader::RPathChain const*) + 52 (dyld) [0x7fff602e429c]
                  1   dyld::load(char const*, dyld::LoadContext const&) + 214 (dyld) [0x7fff602dff08]
                    1   dyld::loadPhase0(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 190 (dyld) [0x7fff602e019b]
                      1   dyld::loadPhase1(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 135 (dyld) [0x7fff602e4c31]
                        1   dyld::loadPhase3(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 1399 (dyld) [0x7fff602e54fa]
                          1   dyld::loadPhase4(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) + 158 (dyld) [0x7fff602e560e]
                            1   stat64 + 10 (dyld) [0x7fff60301cd6]
                             *1   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
                               *1   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
                                 *1   stat64 + 140 (mach_kernel) [0xffffff80002fe3cc]
                                   *1   ??? (mach_kernel + 1071696) [0xffffff8000305a50]
                                     *1   vn_stat + 64 (mach_kernel) [0xffffff8000309c70]
                                       *1   vnode_authorize + 91 (mach_kernel) [0xffffff80002f548b]
                                         *1   kauth_authorize_action + 90 (mach_kernel) [0xffffff8000540d3a]
                                           *1   ??? (mach_kernel + 1002083) [0xffffff80002f4a63]
                                             *1   kauth_cred_issuser + 5 (mach_kernel) [0xffffff8000544cb5]
          1   ImageLoader::link(ImageLoader::LinkContext const&, bool, bool, ImageLoader::RPathChain const&) + 169 (dyld) [0x7fff602ec019]
            1   ImageLoader::recursiveBind(ImageLoader::LinkContext const&, bool) + 111 (dyld) [0x7fff602ec8d5]
              1   ImageLoader::recursiveBind(ImageLoader::LinkContext const&, bool) + 111 (dyld) [0x7fff602ec8d5]
                1   ImageLoader::recursiveBind(ImageLoader::LinkContext const&, bool) + 111 (dyld) [0x7fff602ec8d5]
                  1   ImageLoader::recursiveBind(ImageLoader::LinkContext const&, bool) + 182 (dyld) [0x7fff602ec91c]
                    1   ImageLoaderMachOCompressed::doBind(ImageLoader::LinkContext const&, bool) + 69 (dyld) [0x7fff602f5dc5]
                      1   ImageLoaderMachOCompressed::eachBind(ImageLoader::LinkContext const&, unsigned long (ImageLoaderMachOCompressed::*)(ImageLoader::LinkContext const&, unsigned long, unsigned char, char const*, unsigned char, long, int, char const*, ImageLoaderMachOCompressed::LastLookup*, bool)) + 1312 (dyld) [0x7fff602f6350]
                        1   ImageLoaderMachOCompressed::bindAt(ImageLoader::LinkContext const&, unsigned long, unsigned char, char const*, unsigned char, long, int, char const*, ImageLoaderMachOCompressed::LastLookup*, bool) + 77 (dyld) [0x7fff602f5d3d]
                          1   ImageLoaderMachOCompressed::resolve(ImageLoader::LinkContext const&, char const*, unsigned char, int, ImageLoader const**, ImageLoaderMachOCompressed::LastLookup*, bool) + 316 (dyld) [0x7fff602f5c9c]
                            1   ImageLoaderMachOCompressed::resolveTwolevel(ImageLoader::LinkContext const&, ImageLoader const*, bool, char const*, bool, ImageLoader const**) + 63 (dyld) [0x7fff602f5a9f]
                              1   ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const + 46 (dyld) [0x7fff602ef822]
                                1   ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const + 46 (dyld) [0x7fff602ef822]
                                  1   ImageLoaderMachOCompressed::findExportedSymbol(char const*, ImageLoader const**) const + 93 (dyld) [0x7fff602f535d]
                                    1   ImageLoaderMachOCompressed::trieWalk(unsigned char const*, unsigned char const*, char const*) + 163 (dyld) [0x7fff602f5223]
                                      1   <executing in user space>
      6   dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) + 3060 (dyld) [0x7fff602e2b04]
        6   dyld::initializeMainExecutable() + 207 (dyld) [0x7fff602defc0]
          6   ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) + 54 (dyld) [0x7fff602eceba]
            6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 210 (dyld) [0x7fff602ecfc4]
              6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 210 (dyld) [0x7fff602ecfc4]
                6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 210 (dyld) [0x7fff602ecfc4]
                  6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 210 (dyld) [0x7fff602ecfc4]
                    6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 210 (dyld) [0x7fff602ecfc4]
                      6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 210 (dyld) [0x7fff602ecfc4]
                        6   ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&) + 380 (dyld) [0x7fff602ed06e]
                          6   ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) + 46 (dyld) [0x7fff602f0762]
                            6   ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) + 236 (dyld) [0x7fff602f0378]
                              4   libSystem_initializer + 167 (libSystem.B.dylib) [0x7fff8bc50b28]
                                4   _objc_init + 77 (libobjc.A.dylib) [0x7fff8abb404d]
                                  4   dyld_register_image_state_change_handler + 76 (libdyld.dylib) [0x7fff896ffeda]
                                    4   dyld::registerImageStateBatchChangeHandler(dyld_image_states, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*)) + 181 (dyld) [0x7fff602e167d]
                                      4   dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*)) + 666 (dyld) [0x7fff602e1937]
                                        4   map_images + 71 (libobjc.A.dylib) [0x7fff8abb5584]
                                          4   map_images_nolock + 1162 (libobjc.A.dylib) [0x7fff8abb5a37]
                                            1   _objc_update_stubs_in_mach_header + 540 (libobjc.A.dylib) [0x7fff8abb6115]
                                             *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                                            1   strcmp + 84 (libsystem_c.dylib) [0x7fff85e36374]
                                             *1   return_from_trap + 156 (mach_kernel) [0xffffff80002ce47c]
                                               *1   i386_astintr + 35 (mach_kernel) [0xffffff80002b8123]
                                                 *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                   *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                     *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                       *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                                            1   strcmp + 104 (libsystem_c.dylib) [0x7fff85e36388]
                                             *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
                                            1   strcmp + 135 (libsystem_c.dylib) [0x7fff85e363a7]
                                              1   <executing in user space>
                              1   _GLOBAL__I_a + 4 (libstdc++.6.dylib) [0x7fff8c368194]
                               *1   hndl_alltraps + 225 (mach_kernel) [0xffffff80002ce3d1]
                                 *1   user_trap + 649 (mach_kernel) [0xffffff80002b7f69]
                                   *1   lck_rw_done + 91 (mach_kernel) [0xffffff80002ac8ab]
                              1   heim_load_frameworks + 45 (Kerberos) [0x7fff886570d1]
                                1   dlopen + 57 (libdyld.dylib) [0x7fff896ffdd8]
                                  1   dlopen + 483 (dyld) [0x7fff602e781a]
                                    1   dyld::link(ImageLoader*, bool, ImageLoader::RPathChain const&) + 547 (dyld) [0x7fff602e1ce4]
                                      1   ImageLoader::link(ImageLoader::LinkContext const&, bool, bool, ImageLoader::RPathChain const&) + 202 (dyld) [0x7fff602ec03a]
                                        1   dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*)) + 791 (dyld) [0x7fff602e19b4]
                                          1   map_images + 71 (libobjc.A.dylib) [0x7fff8abb5584]
                                            1   map_images_nolock + 1162 (libobjc.A.dylib) [0x7fff8abb5a37]
                                              1   _objc_update_stubs_in_mach_header + 540 (libobjc.A.dylib) [0x7fff8abb6115]
                                               *1   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
      5   dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) + 132 (dyld) [0x7fff602e1f94]
        5   __private_getcwd + 145 (dyld) [0x7fff602fbd0e]
          3   open + 10 (dyld) [0x7fff60301ae2]
           *3   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
             *3   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
               *3   open + 260 (mach_kernel) [0xffffff80002fc2d4]
                 *3   ??? (mach_kernel + 1030921) [0xffffff80002fbb09]
                   *3   vn_open_auth + 2108 (mach_kernel) [0xffffff800030932c]
                     *3   VNOP_OPEN + 70 (mach_kernel) [0xffffff8000311c06]
                       *3   nfs_vnop_open + 582 (mach_kernel) [0xffffff8000499e86]
                         *3   nfs_getattr + 924 (mach_kernel) [0xffffff800049a71c]
                           *3   nfs3_getattr_rpc + 646 (mach_kernel) [0xffffff800049b9d6]
                             *3   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                               *3   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                 *3   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                   *3   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                     *3   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                       *3   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                         *3   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                           *3   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
          2   stat64 + 10 (dyld) [0x7fff60301cd6]
           *2   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
             *2   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
               *2   stat64 + 140 (mach_kernel) [0xffffff80002fe3cc]
                 *2   ??? (mach_kernel + 1071570) [0xffffff80003059d2]
                   *2   namei + 1454 (mach_kernel) [0xffffff80002eb14e]
                     *2   lookup + 683 (mach_kernel) [0xffffff80002eb7db]
                       *2   vnode_authorize + 91 (mach_kernel) [0xffffff80002f548b]
                         *2   kauth_authorize_action + 90 (mach_kernel) [0xffffff8000540d3a]
                           *2   ??? (mach_kernel + 1001252) [0xffffff80002f4724]
                             *2   VNOP_ACCESS + 70 (mach_kernel) [0xffffff8000311ca6]
                               *2   nfs_vnop_access + 482 (mach_kernel) [0xffffff8000499c12]
                                 *2   nfs3_access_rpc + 540 (mach_kernel) [0xffffff80004997fc]
                                   *2   nfs_request + 118 (mach_kernel) [0xffffff8000479236]
                                     *2   nfs_request2 + 238 (mach_kernel) [0xffffff800047933e]
                                       *2   nfs_wait_reply + 385 (mach_kernel) [0xffffff8000477cd1]
                                         *2   msleep + 116 (mach_kernel) [0xffffff800056a2e4]
                                           *2   ??? (mach_kernel + 3579622) [0xffffff8000569ee6]
                                             *2   lck_mtx_sleep_deadline + 87 (mach_kernel) [0xffffff8000226667]
                                               *2   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                 *2   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                   *2   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
      2   dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) + 2353 (dyld) [0x7fff602e2841]
        2   ImageLoaderMachO::instantiateMainExecutable(macho_header const*, unsigned long, char const*, ImageLoader::LinkContext const&) + 84 (dyld) [0x7fff602ede44]
          2   ImageLoaderMachO::getSlide() const + 10 (dyld) [0x7fff602efc86]
           *2   thread_exception_return + 0 (mach_kernel) [0xffffff80002b196b]
 *2   hndl_unix_scall64 + 19 (mach_kernel) [0xffffff80002cecf3]
   *2   unix_syscall64 + 522 (mach_kernel) [0xffffff80005e17da]
     *2   exit + 25 (mach_kernel) [0xffffff80005563a9]
       *2   exit1_internal + 567 (mach_kernel) [0xffffff8000556607]
         *2   task_terminate_internal + 384 (mach_kernel) [0xffffff80002359f0]
           *2   ipc_space_terminate + 172 (mach_kernel) [0xffffff800021830c]
             *2   ipc_right_terminate + 518 (mach_kernel) [0xffffff8000216776]
               *2   mach_notify_no_senders + 65 (mach_kernel) [0xffffff800024efd1]
                 *2   mach_msg_send_from_kernel_proper + 66 (mach_kernel) [0xffffff8000220dc2]
                   *2   ipc_kmsg_send + 104 (mach_kernel) [0xffffff8000210448]
                     *2   ipc_kobject_server + 348 (mach_kernel) [0xffffff8000220adc]
                       *1   iokit_notify + 170 (mach_kernel) [0xffffff8000292fea]
                         *1   iokit_client_died + 97 (mach_kernel) [0xffffff800065f891]
                           *1   IOATIR600GLContext::clientClose() + 37 (ATIRadeonX2000) [0xffffff7f81887d33]
                             *1   ATIR600GLContext::stop(IOService*) + 52 (ATIRadeonX2000) [0xffffff7f818c734e]
                               *1   IOATIR600GLContext::stop(IOService*) + 504 (ATIRadeonX2000) [0xffffff7f81887924]
                                 *1   IOATIR600Shared::free() + 135 (ATIRadeonX2000) [0xffffff7f81897d1b]
                                   *1   IOATIR600Accelerator::freeOrphanTexture(bool, bool) + 98 (ATIRadeonX2000) [0xffffff7f8188127c]
                                     *1   IOATIR600Shared::finalize_texture(IOATIR600Accelerator*, VendorTextureBuffer*) + 45 (ATIRadeonX2000) [0xffffff7f8189948d]
                                       *1   IOSurfaceDeviceCache::release() + 67 (IOSurface) [0xffffff7f80c9d237]
                                         *1   IOSurfaceDeviceCache::free() + 62 (IOSurface) [0xffffff7f80c9d2a4]
                                           *1   IOATIR600Accelerator::deviceCacheControl(IOSurfaceDeviceCache*, unsigned int, unsigned long long, unsigned long long) + 313 (ATIRadeonX2000) [0xffffff7f818840c9]
                                             *1   ATIRadeonX2000::waitForTimeStamp(unsigned int) + 58 (ATIRadeonX2000) [0xffffff7f818a0022]
                                               *1   ATIRadeonX2000HWChannel::waitForTimestamp(unsigned int, unsigned long long*, bool) + 206 (ATIRadeonX2000) [0xffffff7f818dccd4]
                                                 *1   ATIRadeonX2000HWChannel::timeStampEnableInterruptAndSleep(unsigned int) + 409 (ATIRadeonX2000) [0xffffff7f818dd3c1]
                                                   *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                     *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                       *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                       *1   iokit_notify + 245 (mach_kernel) [0xffffff8000293035]
                         *1   IOUserClient::free() + 27 (mach_kernel) [0xffffff8000660e9b]
                           *1   OSSet::free() + 50 (mach_kernel) [0xffffff8000602ce2]
                             *1   OSArray::free() + 46 (mach_kernel) [0xffffff80005ee87e]
                               *1   OSArray::flushCollection() + 67 (mach_kernel) [0xffffff80005eea03]
                                 *1   IOMemoryMap::taggedRelease(void const*) const + 46 (mach_kernel) [0xffffff80006535ae]
                                   *1   IOMemoryMap::free() + 78 (mach_kernel) [0xffffff800065360e]
                                     *1   IOBufferMemoryDescriptor::free() + 166 (mach_kernel) [0xffffff800064ac26]
                                       *1   IOGeneralMemoryDescriptor::free() + 228 (mach_kernel) [0xffffff8000650804]
                                         *1   mach_notify_no_senders + 65 (mach_kernel) [0xffffff800024efd1]
                                           *1   mach_msg_send_from_kernel_proper + 66 (mach_kernel) [0xffffff8000220dc2]
                                             *1   hw_lock_unlock + 46 (mach_kernel) [0xffffff80002ac50e]
                                               *1   ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                                 *1   kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                                   *1   ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                     *1   thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                       *1   ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                         *1   machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
  1   offset_to_dyld_all_image_infos + 24 (dyld) [0x7fff602de028]
   *1   thread_bootstrap_return + 0 (mach_kernel) [0xffffff80002b1966]

  Thread 0xab6c0c   DispatchQueue 2          priority 33         cpu time   0.002s
  802 _dispatch_mgr_thread + 54 (libdispatch.dylib) [0x7fff82f03a2a]
    802 kevent + 10 (libsystem_kernel.dylib) [0x7fff8ab39d16]
     *802 ??? (mach_kernel + 3471600) [0xffffff800054f8f0]
       *4   <suspended>

  Thread 0xab6c5d   priority 31        
  751 thread_start + 13 (libsystem_c.dylib) [0x7fff85e351c1]
    751 _pthread_start + 327 (libsystem_c.dylib) [0x7fff85e48782]
      750 glcDebugListener + 405 (OpenGL) [0x7fff817afb05]
        750 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
         *750 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
      1   glcDebugListener + 158 (OpenGL) [0x7fff817afa0e]
        1   bootstrap_check_in + 35 (liblaunch.dylib) [0x7fff845186d7]
          1   ??? (liblaunch.dylib + 13551) [0x7fff845194ef]
            1   mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
             *1   ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]

  Thread 0xab6c4c   priority <multiple> cpu time   0.007s
  729 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    729 _pthread_wqthread + 412 (libsystem_c.dylib) [0x7fff85e4acf3]
      729 __workq_kernreturn + 10 (libsystem_kernel.dylib) [0x7fff8ab396d6]
       *729 ??? (mach_kernel + 3911152) [0xffffff80005badf0]
         *4   <suspended>
  10  __pthread_set_self + 16 (libsystem_c.dylib) [0x7fff85e351a4]
   *10  ??? (mach_kernel + 3911152) [0xffffff80005badf0]

  Thread 0xab6c4a   priority <multiple>
  356 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    356 _pthread_wqthread + 412 (libsystem_c.dylib) [0x7fff85e4acf3]
      356 __workq_kernreturn + 10 (libsystem_kernel.dylib) [0x7fff8ab396d6]
       *356 ??? (mach_kernel + 3911152) [0xffffff80005badf0]
         *4   <suspended>

  Thread 0xab6c47   priority <multiple>
  352 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    352 _pthread_wqthread + 412 (libsystem_c.dylib) [0x7fff85e4acf3]
      352 __workq_kernreturn + 10 (libsystem_kernel.dylib) [0x7fff8ab396d6]
       *352 ??? (mach_kernel + 3911152) [0xffffff80005badf0]
         *4   <suspended>

  Thread 0xab6c68   priority 33        
  339 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    339 _pthread_wqthread + 412 (libsystem_c.dylib) [0x7fff85e4acf3]
      339 __workq_kernreturn + 10 (libsystem_kernel.dylib) [0x7fff8ab396d6]
       *339 ??? (mach_kernel + 3911152) [0xffffff80005badf0]

  Thread 0xab6c4c   DispatchQueue 56         priority 31        
  8 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    8 _pthread_wqthread + 404 (libsystem_c.dylib) [0x7fff85e4aceb]
      8 _dispatch_worker_thread2 + 249 (libdispatch.dylib) [0x7fff82f02207]
        8 _dispatch_queue_invoke + 52 (libdispatch.dylib) [0x7fff82f02335]
          8 _dispatch_queue_drain + 180 (libdispatch.dylib) [0x7fff82f0248c]
            8 _dispatch_queue_invoke + 72 (libdispatch.dylib) [0x7fff82f02349]
              8 _dispatch_source_invoke + 691 (libdispatch.dylib) [0x7fff82f032d7]
                8 _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
                  8 ___xp_init_service_cg_event_port_block_invoke + 106 (libXplugin.1.dylib) [0x100d0df8e]
                    8 CGEventCreateNextEvent + 31 (CoreGraphics) [0x7fff834acee4]
                      8 CGSGetNextEventRecordInternal + 122 (CoreGraphics) [0x7fff834acfa7]
                        6 snarf_events + 367 (CoreGraphics) [0x7fff834ad222]
                          6 CGSDispatchDatagramsFromStream + 237 (CoreGraphics) [0x7fff834ad5ef]
                            6 notify_datagram_handler + 232 (CoreGraphics) [0x7fff834ed3e8]
                              6 CGSPostLocalNotification + 302 (CoreGraphics) [0x7fff834af9e7]
                                6 _WindowRightsGrantOfferedNotificationHandler + 510 (CoreGraphics) [0x7fff834512da]
                                  4 CGSCompleteWindowRightsGrant + 84 (CoreGraphics) [0x7fff834513ea]
                                    2 _UpdateWindowRights + 52 (CoreGraphics) [0x7fff83451526]
                                      2 CGSGetSharedWindow + 163 (CoreGraphics) [0x7fff834515fc]
                                        1 find_shared_window + 242 (CoreGraphics) [0x7fff8344f66a]
                                          1 _CGSGetSharedWindow + 111 (CoreGraphics) [0x7fff8344f8e5]
                                            1 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                             *1 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                                        1 find_shared_window + 553 (CoreGraphics) [0x7fff8344f7a1]
                                          1 CGSBindWindow + 96 (CoreGraphics) [0x7fff8344f9f0]
                                            1 CGSGlobalErrorv + 160 (CoreGraphics) [0x7fff834638ab]
                                              1 _asl_lib_vlog + 513 (libsystem_c.dylib) [0x7fff85e54442]
                                                1 _asl_send_message + 1273 (libsystem_c.dylib) [0x7fff85e54ca7]
                                                  1 asl_msg_to_string_raw + 322 (libsystem_c.dylib) [0x7fff85e5c33e]
                                                    1 _asl_time_string + 135 (libsystem_c.dylib) [0x7fff85e5c409]
                                                      1 ctime_r + 21 (libsystem_c.dylib) [0x7fff85e7821a]
                                                        1 localtime_r + 47 (libsystem_c.dylib) [0x7fff85e780c1]
                                                          1 tzsetwall_basic + 294 (libsystem_c.dylib) [0x7fff85e767f2]
                                                            1 notify_register_tz + 188 (libsystem_c.dylib) [0x7fff85e77825]
                                                              1 notify_register_check + 484 (libsystem_notify.dylib) [0x7fff8c70d8c3]
                                                                1 _notify_server_register_check_2 + 139 (libsystem_notify.dylib) [0x7fff8c709deb]
                                                                  1 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                                                   *1 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                                    2 CGSUpdateWindowMapping + 272 (CoreGraphics) [0x7fff8345173c]
                                      2 _CGSGetSharedWindow + 111 (CoreGraphics) [0x7fff8344f8e5]
                                        2 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                         *2 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                                  2 CGSCompleteWindowRightsGrant + 65 (CoreGraphics) [0x7fff834513d7]
                                    2 _CGSCompleteWindowRightsGrant + 97 (CoreGraphics) [0x7fff83451488]
                                      2 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                                       *1 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]
                                       *1 hndl_mach_scall64 + 19 (mach_kernel) [0xffffff80002ced13]
                                         *1 ??? (mach_kernel + 678614) [0xffffff80002a5ad6]
                                           *1 mach_msg_overwrite_trap + 187 (mach_kernel) [0xffffff80002195fb]
                                             *1 ipc_kmsg_send + 372 (mach_kernel) [0xffffff8000210554]
                                               *1 ipc_mqueue_send + 388 (mach_kernel) [0xffffff8000212d34]
                                                 *1 ipc_mqueue_post + 539 (mach_kernel) [0xffffff8000212f7b]
                                                   *1 ml_set_interrupts_enabled + 51 (mach_kernel) [0xffffff80002b1d93]
                                                     *1 ??? (mach_kernel + 844973) [0xffffff80002ce4ad]
                                                       *1 kernel_trap + 314 (mach_kernel) [0xffffff80002b74ba]
                                                         *1 ast_taken + 157 (mach_kernel) [0xffffff800021b67d]
                                                           *1 thread_block_reason + 300 (mach_kernel) [0xffffff800022d9dc]
                                                             *1 ??? (mach_kernel + 190225) [0xffffff800022e711]
                                                               *1 machine_switch_context + 366 (mach_kernel) [0xffffff80002b3d3e]
                        2 snarf_events + 184 (CoreGraphics) [0x7fff834ad16b]
                          2 _CGSGetPortStreamInline + 99 (CoreGraphics) [0x7fff834ad30e]
                            2 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                             *2 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]

  Thread 0xab6d0b   priority 31        
  5 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    5 _pthread_wqthread + 412 (libsystem_c.dylib) [0x7fff85e4acf3]
      5 __workq_kernreturn + 10 (libsystem_kernel.dylib) [0x7fff8ab396d6]
       *5 ??? (mach_kernel + 3911152) [0xffffff80005badf0]

  Thread 0xab6c4a   DispatchQueue 25         priority 31        
  1 start_wqthread + 13 (libsystem_c.dylib) [0x7fff85e351b1]
    1 _pthread_wqthread + 404 (libsystem_c.dylib) [0x7fff85e4aceb]
      1 _dispatch_worker_thread2 + 249 (libdispatch.dylib) [0x7fff82f02207]
        1 _dispatch_queue_invoke + 52 (libdispatch.dylib) [0x7fff82f02335]
          1 _dispatch_queue_drain + 235 (libdispatch.dylib) [0x7fff82f024c3]
            1 _dispatch_client_callout + 8 (libdispatch.dylib) [0x7fff82f010fa]
              1 _xpc_connection_init + 1062 (libxpc.dylib) [0x7fff8b814c82]
                1 _xpc_connection_bootstrap_look_up_slow + 371 (libxpc.dylib) [0x7fff8b815c21]
                  1 bootstrap_look_up3 + 69 (liblaunch.dylib) [0x7fff845184d9]
                    1 ??? (liblaunch.dylib + 14276) [0x7fff845197c4]
                      1 mach_msg_trap + 10 (libsystem_kernel.dylib) [0x7fff8ab37686]
                       *1 ipc_mqueue_receive_continue + 0 (mach_kernel) [0xffffff8000213030]

  Binary Images:
         0x1006dd000 -        0x1006ddfff  causes_fault <ABA3A337-E310-3F65-985C-DA756633C90F> /rsi/enghome/amagill/macbug/./causes_fault
         0x1006e1000 -        0x100735ff7  libGL.1.dylib <E60AAB30-91CE-349D-B197-23406068FE10> /opt/X11/lib/libGL.1.dylib
         0x100765000 -        0x100869ff7  libX11.6.dylib <69422716-0159-3986-AD42-18FCA2BF331B> /opt/X11/lib/libX11.6.dylib
         0x100897000 -        0x100c04fff  libXm.3.0.2.dylib <08E5DA90-7373-3BCE-AF96-F751AF41EF80> /rsi/enghome/amagill/macbug/libXm.3.0.2.dylib
         0x100cad000 -        0x100ceffff  libXt.6.dylib <CA06BA34-F0E7-3BD2-BFF5-C3CD152DCDAD> /opt/X11/lib/libXt.6.dylib
         0x100d0c000 -        0x100d19ff7  libXplugin.1.dylib <F27887A8-6452-3C3E-8F5A-E53D11C406F1> /opt/X11/lib/libXplugin.1.dylib
         0x100d30000 -        0x100d44ff7  libxcb.1.dylib <B0168335-5B16-3769-86D8-3E0EF5AF667E> /opt/X11/lib/libxcb.1.dylib
      0x7fff602dd000 -     0x7fff6031193f  dyld <A40597AA-5529-3337-8C09-D8A014EB1578> /usr/lib/dyld
      0x7fff817ae000 -     0x7fff817bdff7  com.apple.opengl 1.8.5 (1.8.5) <C554C4DA-517D-3F77-BC7E-DDFD9E01A891> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
      0x7fff81d07000 -     0x7fff8201eff7  com.apple.CoreServices.CarbonCore 1037 (1037) <5127E2AB-AE98-3393-AEF6-CA8C1090F921> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
      0x7fff82545000 -     0x7fff8254bfff  libGFXShared.dylib <34093C75-3ECB-3899-A2C0-A52ECAA7C3FC> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
      0x7fff82eff000 -     0x7fff82f14ff7  libdispatch.dylib <0B6B6E7F-4D8A-3F3B-A4BF-6CF34638DBBB> /usr/lib/system/libdispatch.dylib
      0x7fff83448000 -     0x7fff83dd939f  com.apple.CoreGraphics 1.600.0 <2F5D7032-9A96-36AE-A227-428E95CAE0C5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
      0x7fff84516000 -     0x7fff8451efff  liblaunch.dylib <224CB010-6CF8-3FC2-885C-6F80330321EB> /usr/lib/system/liblaunch.dylib
      0x7fff848d2000 -     0x7fff84abbfff  com.apple.CoreFoundation 6.8 (744) <47AEA7C7-EF9B-3FC6-AEBF-CE02FC650301> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
      0x7fff85e34000 -     0x7fff85f00fef  libsystem_c.dylib <16B6B86C-53EE-36E8-AC2B-4AADC1008098> /usr/lib/system/libsystem_c.dylib
      0x7fff86805000 -     0x7fff86872ff7  com.apple.framework.IOKit 2.0 <9B7C5E7A-3F7A-3E70-8179-4384992B84E0> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
      0x7fff872ce000 -     0x7fff8737ffff  com.apple.LaunchServices 539 (539) <04FA5C61-6349-3841-9609-B650B6222800> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
      0x7fff88652000 -     0x7fff88674ff7  com.apple.Kerberos 2.0 (1) <C49B8820-34ED-39D7-A407-A3E854153556> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
      0x7fff88b3b000 -     0x7fff88b71fff  libsystem_info.dylib <4FFCA242-7F04-365F-87A6-D4EFB89503C1> /usr/lib/system/libsystem_info.dylib
      0x7fff896fe000 -     0x7fff89701ff7  libdyld.dylib <F59367C9-C110-382B-A695-9035A6DD387E> /usr/lib/system/libdyld.dylib
      0x7fff8ab27000 -     0x7fff8ab42ff7  libsystem_kernel.dylib <E0447BF5-E104-35B0-B28B-4156887D58F1> /usr/lib/system/libsystem_kernel.dylib
      0x7fff8abb3000 -     0x7fff8accba27  libobjc.A.dylib <9FA80CDA-97F4-3801-8879-0C1B976BC5CA> /usr/lib/libobjc.A.dylib
      0x7fff8b80c000 -     0x7fff8b82eff7  libxpc.dylib <C552985C-2171-3136-A1B9-3AB21CBF7C4A> /usr/lib/system/libxpc.dylib
      0x7fff8bc4f000 -     0x7fff8bc50ff7  libSystem.B.dylib <365477AB-D641-389D-B8F4-A1FAE9657EEE> /usr/lib/libSystem.B.dylib
      0x7fff8c366000 -     0x7fff8c3cffff  libstdc++.6.dylib <EAA2B53E-EADE-39CF-A0EF-FB9D4940672A> /usr/lib/libstdc++.6.dylib
      0x7fff8c707000 -     0x7fff8c712fff  libsystem_notify.dylib <C49275CC-835A-3207-AFBA-8C01374927B6> /usr/lib/system/libsystem_notify.dylib
 *0xffffff7f80c99000 - 0xffffff7f80ca1ff2  com.apple.iokit.IOSurface 86.0.2 (86.0.2) <7199A934-B665-33C1-A15A-F56A811A1C2B> //System/Library/Extensions/IOSurface.kext/Contents/MacOS/IOSurface
 *0xffffff7f8187c000 - 0xffffff7f819afff1  com.apple.ATIRadeonX2000 8.0.51 (8.0.0) <F2643601-396F-313A-8D94-5A36091345D0> //System/Library/Extensions/ATIRadeonX2000.kext/Contents/MacOS/ATIRadeonX2000
 *0xffffff7f8212f000 - 0xffffff7f82131ff0  com.apple.AppleFSCompression.AppleFSCompressionTypeZlib 49 (1.0.0d1) <5461F87D-B177-359F-BCBA-AAD93F1AA676> //System/Library/Extensions/AppleFSCompressionTypeZlib.kext/Contents/MacOS/AppleFSCompressionTypeZlib
 *0xffffff8000200000 - 0xffffff800073d30c  mach_kernel <8D5F8EF3-9D12-384B-8070-EF2A49C45D24> /mach_kernel
